//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="AppMenu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppMenu : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public AppMenu()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new AppMenu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AppMenu CreateAppMenu(int id)
        {
            AppMenu appMenu = new AppMenu();
            appMenu.ID = id;
            return appMenu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int ID
        {
            get
            {
                return _iD;
            }
            set
            {
                if (_iD != value)
                {
        			int oldValue =  _iD;
        			bool stopChanging = false;
                    On_ID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("ID");
        			if(!stopChanging)
        			{
        				_iD = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("ID");
        				On_ID_Changed(oldValue, _iD);//\\
        			}
                }
            }
        }
    	public static String ID_PropertyName { get { return "ID"; } }
        private int _iD;
        partial void On_ID_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_ID_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ParentID
        {
            get
            {
                return _parentID;
            }
            set
            {
    			Nullable<int> oldValue =  _parentID;
    			bool stopChanging = false;
                On_ParentID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentID");
    			if(!stopChanging)
    			{
    				_parentID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentID");
    				On_ParentID_Changed(oldValue, _parentID);//\\
    			}
            }
        }
    	public static String ParentID_PropertyName { get { return "ParentID"; } }
        private Nullable<int> _parentID;
        partial void On_ParentID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ParentID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _title;
            }
            set
            {
    			string oldValue =  _title;
    			bool stopChanging = false;
                On_Title_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Title");
    			if(!stopChanging)
    			{
    				_title = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Title");
    				On_Title_Changed(oldValue, _title);//\\
    			}
            }
        }
    	public static String Title_PropertyName { get { return "Title"; } }
        private string _title;
        partial void On_Title_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Title_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Type
        {
            get
            {
                return _type;
            }
            set
            {
    			string oldValue =  _type;
    			bool stopChanging = false;
                On_Type_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Type");
    			if(!stopChanging)
    			{
    				_type = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Type");
    				On_Type_Changed(oldValue, _type);//\\
    			}
            }
        }
    	public static String Type_PropertyName { get { return "Type"; } }
        private string _type;
        partial void On_Type_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Type_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaPhanHeQL
        {
            get
            {
                return _maPhanHeQL;
            }
            set
            {
    			string oldValue =  _maPhanHeQL;
    			bool stopChanging = false;
                On_MaPhanHeQL_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaPhanHeQL");
    			if(!stopChanging)
    			{
    				_maPhanHeQL = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaPhanHeQL");
    				On_MaPhanHeQL_Changed(oldValue, _maPhanHeQL);//\\
    			}
            }
        }
    	public static String MaPhanHeQL_PropertyName { get { return "MaPhanHeQL"; } }
        private string _maPhanHeQL;
        partial void On_MaPhanHeQL_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaPhanHeQL_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Enable
        {
            get
            {
                return _enable;
            }
            set
            {
    			Nullable<bool> oldValue =  _enable;
    			bool stopChanging = false;
                On_Enable_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Enable");
    			if(!stopChanging)
    			{
    				_enable = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Enable");
    				On_Enable_Changed(oldValue, _enable);//\\
    			}
            }
        }
    	public static String Enable_PropertyName { get { return "Enable"; } }
        private Nullable<bool> _enable;
        partial void On_Enable_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Enable_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> FunctionID
        {
            get
            {
                return _functionID;
            }
            set
            {
    			Nullable<int> oldValue =  _functionID;
    			bool stopChanging = false;
                On_FunctionID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("FunctionID");
    			if(!stopChanging)
    			{
    				_functionID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("FunctionID");
    				On_FunctionID_Changed(oldValue, _functionID);//\\
    			}
            }
        }
    	public static String FunctionID_PropertyName { get { return "FunctionID"; } }
        private Nullable<int> _functionID;
        partial void On_FunctionID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_FunctionID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Visible
        {
            get
            {
                return _visible;
            }
            set
            {
    			Nullable<bool> oldValue =  _visible;
    			bool stopChanging = false;
                On_Visible_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Visible");
    			if(!stopChanging)
    			{
    				_visible = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Visible");
    				On_Visible_Changed(oldValue, _visible);//\\
    			}
            }
        }
    	public static String Visible_PropertyName { get { return "Visible"; } }
        private Nullable<bool> _visible;
        partial void On_Visible_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Visible_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ShortKey
        {
            get
            {
                return _shortKey;
            }
            set
            {
    			string oldValue =  _shortKey;
    			bool stopChanging = false;
                On_ShortKey_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ShortKey");
    			if(!stopChanging)
    			{
    				_shortKey = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("ShortKey");
    				On_ShortKey_Changed(oldValue, _shortKey);//\\
    			}
            }
        }
    	public static String ShortKey_PropertyName { get { return "ShortKey"; } }
        private string _shortKey;
        partial void On_ShortKey_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_ShortKey_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> LocalIdx
        {
            get
            {
                return _localIdx;
            }
            set
            {
    			Nullable<int> oldValue =  _localIdx;
    			bool stopChanging = false;
                On_LocalIdx_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LocalIdx");
    			if(!stopChanging)
    			{
    				_localIdx = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LocalIdx");
    				On_LocalIdx_Changed(oldValue, _localIdx);//\\
    			}
            }
        }
    	public static String LocalIdx_PropertyName { get { return "LocalIdx"; } }
        private Nullable<int> _localIdx;
        partial void On_LocalIdx_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_LocalIdx_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GlobalIdx
        {
            get
            {
                return _globalIdx;
            }
            set
            {
    			Nullable<int> oldValue =  _globalIdx;
    			bool stopChanging = false;
                On_GlobalIdx_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GlobalIdx");
    			if(!stopChanging)
    			{
    				_globalIdx = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GlobalIdx");
    				On_GlobalIdx_Changed(oldValue, _globalIdx);//\\
    			}
            }
        }
    	public static String GlobalIdx_PropertyName { get { return "GlobalIdx"; } }
        private Nullable<int> _globalIdx;
        partial void On_GlobalIdx_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GlobalIdx_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsBeginGroup
        {
            get
            {
                return _isBeginGroup;
            }
            set
            {
    			Nullable<bool> oldValue =  _isBeginGroup;
    			bool stopChanging = false;
                On_IsBeginGroup_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IsBeginGroup");
    			if(!stopChanging)
    			{
    				_isBeginGroup = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IsBeginGroup");
    				On_IsBeginGroup_Changed(oldValue, _isBeginGroup);//\\
    			}
            }
        }
    	public static String IsBeginGroup_PropertyName { get { return "IsBeginGroup"; } }
        private Nullable<bool> _isBeginGroup;
        partial void On_IsBeginGroup_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_IsBeginGroup_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_image);
            }
            set
            {
    			byte[] oldValue =  _image;
    			bool stopChanging = false;
                On_Image_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Image");
    			if(!stopChanging)
    			{
    				_image = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Image");
    				On_Image_Changed(oldValue, _image);//\\
    			}
            }
        }
    	public static String Image_PropertyName { get { return "Image"; } }
        private byte[] _image;
        partial void On_Image_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_Image_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Focused
        {
            get
            {
                return _focused;
            }
            set
            {
    			Nullable<bool> oldValue =  _focused;
    			bool stopChanging = false;
                On_Focused_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Focused");
    			if(!stopChanging)
    			{
    				_focused = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Focused");
    				On_Focused_Changed(oldValue, _focused);//\\
    			}
            }
        }
    	public static String Focused_PropertyName { get { return "Focused"; } }
        private Nullable<bool> _focused;
        partial void On_Focused_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Focused_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_AppMenus_AppFunctions", "AppFunction")]
        public AppFunction AppFunction
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppFunction>("PSC_ERPModel.FK_AppMenus_AppFunctions", "AppFunction").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_AppFunction_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppFunction>("PSC_ERPModel.FK_AppMenus_AppFunctions", "AppFunction").Value = value;
    				On_AppFunction_Changed(this.AppFunction);//\\//
    			}
    	    }
        }
    	public static String AppFunction_ReferencePropertyName { get { return "AppFunction"; } }
    	partial void On_AppFunction_Changing(ref AppFunction newValue, ref bool stopChanging);
    	partial void On_AppFunction_Changed(AppFunction currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppFunction> AppFunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppFunction>("PSC_ERPModel.FK_AppMenus_AppFunctions", "AppFunction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppFunction>("PSC_ERPModel.FK_AppMenus_AppFunctions", "AppFunction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_AppMenus_AppMenus", "AppMenu1")]
        public EntityCollection<AppMenu> ChildAppMenus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppMenu>("PSC_ERPModel.FK_AppMenus_AppMenus", "AppMenu1");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_ChildAppMenus_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppMenu>("PSC_ERPModel.FK_AppMenus_AppMenus", "AppMenu1", value);
    					On_ChildAppMenus_Changed(this.ChildAppMenus);//\\//
    				}
    			}
            }
        }
    	public static String ChildAppMenus_EntityCollectionPropertyName { get { return "ChildAppMenus"; } }
    	partial void On_ChildAppMenus_Changing(ref EntityCollection<AppMenu> newValue, ref bool stopChanging);
    	partial void On_ChildAppMenus_Changed(EntityCollection<AppMenu> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_AppMenus_AppMenus", "AppMenu")]
        public AppMenu ParentAppMenu
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppMenu>("PSC_ERPModel.FK_AppMenus_AppMenus", "AppMenu").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ParentAppMenu_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppMenu>("PSC_ERPModel.FK_AppMenus_AppMenus", "AppMenu").Value = value;
    				On_ParentAppMenu_Changed(this.ParentAppMenu);//\\//
    			}
    	    }
        }
    	public static String ParentAppMenu_ReferencePropertyName { get { return "ParentAppMenu"; } }
    	partial void On_ParentAppMenu_Changing(ref AppMenu newValue, ref bool stopChanging);
    	partial void On_ParentAppMenu_Changed(AppMenu currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppMenu> ParentAppMenuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppMenu>("PSC_ERPModel.FK_AppMenus_AppMenus", "AppMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppMenu>("PSC_ERPModel.FK_AppMenus_AppMenus", "AppMenu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_AppMenusRights_AppMenus", "AppMenusRight")]
        public EntityCollection<AppMenusRight> AppMenusRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppMenusRight>("PSC_ERPModel.FK_AppMenusRights_AppMenus", "AppMenusRight");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_AppMenusRights_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppMenusRight>("PSC_ERPModel.FK_AppMenusRights_AppMenus", "AppMenusRight", value);
    					On_AppMenusRights_Changed(this.AppMenusRights);//\\//
    				}
    			}
            }
        }
    	public static String AppMenusRights_EntityCollectionPropertyName { get { return "AppMenusRights"; } }
    	partial void On_AppMenusRights_Changing(ref EntityCollection<AppMenusRight> newValue, ref bool stopChanging);
    	partial void On_AppMenusRights_Changed(EntityCollection<AppMenusRight> currentValue);

        #endregion

    }
}
