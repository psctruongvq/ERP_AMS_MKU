//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:32 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="view_Report_DonHangBan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class view_Report_DonHangBan : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public view_Report_DonHangBan()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new view_Report_DonHangBan object.
        /// </summary>
        /// <param name="maDonHangBan">Initial value of the MaDonHangBan property.</param>
        public static view_Report_DonHangBan Createview_Report_DonHangBan(long maDonHangBan)
        {
            view_Report_DonHangBan view_Report_DonHangBan = new view_Report_DonHangBan();
            view_Report_DonHangBan.MaDonHangBan = maDonHangBan;
            return view_Report_DonHangBan;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public long MaDonHangBan
        {
            get
            {
                return _maDonHangBan;
            }
            set
            {
                if (_maDonHangBan != value)
                {
        			long oldValue =  _maDonHangBan;
        			bool stopChanging = false;
                    On_MaDonHangBan_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("MaDonHangBan");
        			if(!stopChanging)
        			{
        				_maDonHangBan = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("MaDonHangBan");
        				On_MaDonHangBan_Changed(oldValue, _maDonHangBan);//\\
        			}
                }
            }
        }
    	public static String MaDonHangBan_PropertyName { get { return "MaDonHangBan"; } }
        private long _maDonHangBan;
        partial void On_MaDonHangBan_Changing(long currentValue, ref long newValue, ref bool stopChanging);
        partial void On_MaDonHangBan_Changed(long oldValue, long currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SoDonHang
        {
            get
            {
                return _soDonHang;
            }
            set
            {
    			string oldValue =  _soDonHang;
    			bool stopChanging = false;
                On_SoDonHang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoDonHang");
    			if(!stopChanging)
    			{
    				_soDonHang = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("SoDonHang");
    				On_SoDonHang_Changed(oldValue, _soDonHang);//\\
    			}
            }
        }
    	public static String SoDonHang_PropertyName { get { return "SoDonHang"; } }
        private string _soDonHang;
        partial void On_SoDonHang_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_SoDonHang_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> TongTien
        {
            get
            {
                return _tongTien;
            }
            set
            {
    			Nullable<decimal> oldValue =  _tongTien;
    			bool stopChanging = false;
                On_TongTien_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TongTien");
    			if(!stopChanging)
    			{
    				_tongTien = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TongTien");
    				On_TongTien_Changed(oldValue, _tongTien);//\\
    			}
            }
        }
    	public static String TongTien_PropertyName { get { return "TongTien"; } }
        private Nullable<decimal> _tongTien;
        partial void On_TongTien_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_TongTien_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayLap
        {
            get
            {
                return _ngayLap;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayLap;
    			bool stopChanging = false;
                On_NgayLap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayLap");
    			if(!stopChanging)
    			{
    				_ngayLap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayLap");
    				On_NgayLap_Changed(oldValue, _ngayLap);//\\
    			}
            }
        }
    	public static String NgayLap_PropertyName { get { return "NgayLap"; } }
        private Nullable<System.DateTime> _ngayLap;
        partial void On_NgayLap_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayLap_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> PhanTramUuDai
        {
            get
            {
                return _phanTramUuDai;
            }
            set
            {
    			Nullable<double> oldValue =  _phanTramUuDai;
    			bool stopChanging = false;
                On_PhanTramUuDai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("PhanTramUuDai");
    			if(!stopChanging)
    			{
    				_phanTramUuDai = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("PhanTramUuDai");
    				On_PhanTramUuDai_Changed(oldValue, _phanTramUuDai);//\\
    			}
            }
        }
    	public static String PhanTramUuDai_PropertyName { get { return "PhanTramUuDai"; } }
        private Nullable<double> _phanTramUuDai;
        partial void On_PhanTramUuDai_Changing(Nullable<double> currentValue, ref Nullable<double> newValue, ref bool stopChanging);
        partial void On_PhanTramUuDai_Changed(Nullable<double> oldValue, Nullable<double> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> SoTienUuDai
        {
            get
            {
                return _soTienUuDai;
            }
            set
            {
    			Nullable<decimal> oldValue =  _soTienUuDai;
    			bool stopChanging = false;
                On_SoTienUuDai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoTienUuDai");
    			if(!stopChanging)
    			{
    				_soTienUuDai = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoTienUuDai");
    				On_SoTienUuDai_Changed(oldValue, _soTienUuDai);//\\
    			}
            }
        }
    	public static String SoTienUuDai_PropertyName { get { return "SoTienUuDai"; } }
        private Nullable<decimal> _soTienUuDai;
        partial void On_SoTienUuDai_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_SoTienUuDai_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenDoiTac
        {
            get
            {
                return _tenDoiTac;
            }
            set
            {
    			string oldValue =  _tenDoiTac;
    			bool stopChanging = false;
                On_TenDoiTac_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenDoiTac");
    			if(!stopChanging)
    			{
    				_tenDoiTac = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenDoiTac");
    				On_TenDoiTac_Changed(oldValue, _tenDoiTac);//\\
    			}
            }
        }
    	public static String TenDoiTac_PropertyName { get { return "TenDoiTac"; } }
        private string _tenDoiTac;
        partial void On_TenDoiTac_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenDoiTac_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenCongTy
        {
            get
            {
                return _tenCongTy;
            }
            set
            {
    			string oldValue =  _tenCongTy;
    			bool stopChanging = false;
                On_TenCongTy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenCongTy");
    			if(!stopChanging)
    			{
    				_tenCongTy = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenCongTy");
    				On_TenCongTy_Changed(oldValue, _tenCongTy);//\\
    			}
            }
        }
    	public static String TenCongTy_PropertyName { get { return "TenCongTy"; } }
        private string _tenCongTy;
        partial void On_TenCongTy_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenCongTy_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaSoThueDTac
        {
            get
            {
                return _maSoThueDTac;
            }
            set
            {
    			string oldValue =  _maSoThueDTac;
    			bool stopChanging = false;
                On_MaSoThueDTac_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaSoThueDTac");
    			if(!stopChanging)
    			{
    				_maSoThueDTac = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaSoThueDTac");
    				On_MaSoThueDTac_Changed(oldValue, _maSoThueDTac);//\\
    			}
            }
        }
    	public static String MaSoThueDTac_PropertyName { get { return "MaSoThueDTac"; } }
        private string _maSoThueDTac;
        partial void On_MaSoThueDTac_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaSoThueDTac_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaSoThueCty
        {
            get
            {
                return _maSoThueCty;
            }
            set
            {
    			string oldValue =  _maSoThueCty;
    			bool stopChanging = false;
                On_MaSoThueCty_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaSoThueCty");
    			if(!stopChanging)
    			{
    				_maSoThueCty = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaSoThueCty");
    				On_MaSoThueCty_Changed(oldValue, _maSoThueCty);//\\
    			}
            }
        }
    	public static String MaSoThueCty_PropertyName { get { return "MaSoThueCty"; } }
        private string _maSoThueCty;
        partial void On_MaSoThueCty_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaSoThueCty_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DiaChiDTac
        {
            get
            {
                return _diaChiDTac;
            }
            set
            {
    			string oldValue =  _diaChiDTac;
    			bool stopChanging = false;
                On_DiaChiDTac_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DiaChiDTac");
    			if(!stopChanging)
    			{
    				_diaChiDTac = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DiaChiDTac");
    				On_DiaChiDTac_Changed(oldValue, _diaChiDTac);//\\
    			}
            }
        }
    	public static String DiaChiDTac_PropertyName { get { return "DiaChiDTac"; } }
        private string _diaChiDTac;
        partial void On_DiaChiDTac_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DiaChiDTac_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DiaChiCTy
        {
            get
            {
                return _diaChiCTy;
            }
            set
            {
    			string oldValue =  _diaChiCTy;
    			bool stopChanging = false;
                On_DiaChiCTy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DiaChiCTy");
    			if(!stopChanging)
    			{
    				_diaChiCTy = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DiaChiCTy");
    				On_DiaChiCTy_Changed(oldValue, _diaChiCTy);//\\
    			}
            }
        }
    	public static String DiaChiCTy_PropertyName { get { return "DiaChiCTy"; } }
        private string _diaChiCTy;
        partial void On_DiaChiCTy_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DiaChiCTy_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string VietBangChu
        {
            get
            {
                return _vietBangChu;
            }
            set
            {
    			string oldValue =  _vietBangChu;
    			bool stopChanging = false;
                On_VietBangChu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("VietBangChu");
    			if(!stopChanging)
    			{
    				_vietBangChu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("VietBangChu");
    				On_VietBangChu_Changed(oldValue, _vietBangChu);//\\
    			}
            }
        }
    	public static String VietBangChu_PropertyName { get { return "VietBangChu"; } }
        private string _vietBangChu;
        partial void On_VietBangChu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_VietBangChu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayGiaoHang
        {
            get
            {
                return _ngayGiaoHang;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayGiaoHang;
    			bool stopChanging = false;
                On_NgayGiaoHang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayGiaoHang");
    			if(!stopChanging)
    			{
    				_ngayGiaoHang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayGiaoHang");
    				On_NgayGiaoHang_Changed(oldValue, _ngayGiaoHang);//\\
    			}
            }
        }
    	public static String NgayGiaoHang_PropertyName { get { return "NgayGiaoHang"; } }
        private Nullable<System.DateTime> _ngayGiaoHang;
        partial void On_NgayGiaoHang_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayGiaoHang_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayThanhToan
        {
            get
            {
                return _ngayThanhToan;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayThanhToan;
    			bool stopChanging = false;
                On_NgayThanhToan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayThanhToan");
    			if(!stopChanging)
    			{
    				_ngayThanhToan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayThanhToan");
    				On_NgayThanhToan_Changed(oldValue, _ngayThanhToan);//\\
    			}
            }
        }
    	public static String NgayThanhToan_PropertyName { get { return "NgayThanhToan"; } }
        private Nullable<System.DateTime> _ngayThanhToan;
        partial void On_NgayThanhToan_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayThanhToan_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);

        #endregion

    }
}
