//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public Report()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="reportKey">Initial value of the ReportKey property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Report CreateReport(int reportID, string reportKey, int userID)
        {
            Report report = new Report();
            report.ReportID = reportID;
            report.ReportKey = reportKey;
            report.UserID = userID;
            return report;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int ReportID
        {
            get
            {
                return _reportID;
            }
            set
            {
                if (_reportID != value)
                {
        			int oldValue =  _reportID;
        			bool stopChanging = false;
                    On_ReportID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("ReportID");
        			if(!stopChanging)
        			{
        				_reportID = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("ReportID");
        				On_ReportID_Changed(oldValue, _reportID);//\\
        			}
                }
            }
        }
    	public static String ReportID_PropertyName { get { return "ReportID"; } }
        private int _reportID;
        partial void On_ReportID_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_ReportID_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ReportKey
        {
            get
            {
                return _reportKey;
            }
            set
            {
    			string oldValue =  _reportKey;
    			bool stopChanging = false;
                On_ReportKey_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ReportKey");
    			if(!stopChanging)
    			{
    				_reportKey = StructuralObject.SetValidValue(value, false);
    				ReportPropertyChanged("ReportKey");
    				On_ReportKey_Changed(oldValue, _reportKey);//\\
    			}
            }
        }
    	public static String ReportKey_PropertyName { get { return "ReportKey"; } }
        private string _reportKey;
        partial void On_ReportKey_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_ReportKey_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserID
        {
            get
            {
                return _userID;
            }
            set
            {
    			int oldValue =  _userID;
    			bool stopChanging = false;
                On_UserID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UserID");
    			if(!stopChanging)
    			{
    				_userID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("UserID");
    				On_UserID_Changed(oldValue, _userID);//\\
    			}
            }
        }
    	public static String UserID_PropertyName { get { return "UserID"; } }
        private int _userID;
        partial void On_UserID_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_UserID_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return _modifiedDate;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _modifiedDate;
    			bool stopChanging = false;
                On_ModifiedDate_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ModifiedDate");
    			if(!stopChanging)
    			{
    				_modifiedDate = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ModifiedDate");
    				On_ModifiedDate_Changed(oldValue, _modifiedDate);//\\
    			}
            }
        }
    	public static String ModifiedDate_PropertyName { get { return "ModifiedDate"; } }
        private Nullable<System.DateTime> _modifiedDate;
        partial void On_ModifiedDate_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_ModifiedDate_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsRoot
        {
            get
            {
                return _isRoot;
            }
            set
            {
    			Nullable<bool> oldValue =  _isRoot;
    			bool stopChanging = false;
                On_IsRoot_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IsRoot");
    			if(!stopChanging)
    			{
    				_isRoot = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IsRoot");
    				On_IsRoot_Changed(oldValue, _isRoot);//\\
    			}
            }
        }
    	public static String IsRoot_PropertyName { get { return "IsRoot"; } }
        private Nullable<bool> _isRoot;
        partial void On_IsRoot_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_IsRoot_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] ReportLayoutData
        {
            get
            {
                return StructuralObject.GetValidValue(_reportLayoutData);
            }
            set
            {
    			byte[] oldValue =  _reportLayoutData;
    			bool stopChanging = false;
                On_ReportLayoutData_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ReportLayoutData");
    			if(!stopChanging)
    			{
    				_reportLayoutData = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("ReportLayoutData");
    				On_ReportLayoutData_Changed(oldValue, _reportLayoutData);//\\
    			}
            }
        }
    	public static String ReportLayoutData_PropertyName { get { return "ReportLayoutData"; } }
        private byte[] _reportLayoutData;
        partial void On_ReportLayoutData_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_ReportLayoutData_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DataSourceMethod
        {
            get
            {
                return _dataSourceMethod;
            }
            set
            {
    			string oldValue =  _dataSourceMethod;
    			bool stopChanging = false;
                On_DataSourceMethod_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DataSourceMethod");
    			if(!stopChanging)
    			{
    				_dataSourceMethod = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DataSourceMethod");
    				On_DataSourceMethod_Changed(oldValue, _dataSourceMethod);//\\
    			}
            }
        }
    	public static String DataSourceMethod_PropertyName { get { return "DataSourceMethod"; } }
        private string _dataSourceMethod;
        partial void On_DataSourceMethod_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DataSourceMethod_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Idx
        {
            get
            {
                return _idx;
            }
            set
            {
    			Nullable<int> oldValue =  _idx;
    			bool stopChanging = false;
                On_Idx_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Idx");
    			if(!stopChanging)
    			{
    				_idx = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Idx");
    				On_Idx_Changed(oldValue, _idx);//\\
    			}
            }
        }
    	public static String Idx_PropertyName { get { return "Idx"; } }
        private Nullable<int> _idx;
        partial void On_Idx_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_Idx_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ReportName
        {
            get
            {
                return _reportName;
            }
            set
            {
    			string oldValue =  _reportName;
    			bool stopChanging = false;
                On_ReportName_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ReportName");
    			if(!stopChanging)
    			{
    				_reportName = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("ReportName");
    				On_ReportName_Changed(oldValue, _reportName);//\\
    			}
            }
        }
    	public static String ReportName_PropertyName { get { return "ReportName"; } }
        private string _reportName;
        partial void On_ReportName_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_ReportName_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> InList
        {
            get
            {
                return _inList;
            }
            set
            {
    			Nullable<bool> oldValue =  _inList;
    			bool stopChanging = false;
                On_InList_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("InList");
    			if(!stopChanging)
    			{
    				_inList = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("InList");
    				On_InList_Changed(oldValue, _inList);//\\
    			}
            }
        }
    	public static String InList_PropertyName { get { return "InList"; } }
        private Nullable<bool> _inList;
        partial void On_InList_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_InList_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> OnForm
        {
            get
            {
                return _onForm;
            }
            set
            {
    			Nullable<bool> oldValue =  _onForm;
    			bool stopChanging = false;
                On_OnForm_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OnForm");
    			if(!stopChanging)
    			{
    				_onForm = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OnForm");
    				On_OnForm_Changed(oldValue, _onForm);//\\
    			}
            }
        }
    	public static String OnForm_PropertyName { get { return "OnForm"; } }
        private Nullable<bool> _onForm;
        partial void On_OnForm_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_OnForm_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaPhanHe
        {
            get
            {
                return _maPhanHe;
            }
            set
            {
    			string oldValue =  _maPhanHe;
    			bool stopChanging = false;
                On_MaPhanHe_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaPhanHe");
    			if(!stopChanging)
    			{
    				_maPhanHe = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaPhanHe");
    				On_MaPhanHe_Changed(oldValue, _maPhanHe);//\\
    			}
            }
        }
    	public static String MaPhanHe_PropertyName { get { return "MaPhanHe"; } }
        private string _maPhanHe;
        partial void On_MaPhanHe_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaPhanHe_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> RootID
        {
            get
            {
                return _rootID;
            }
            set
            {
    			Nullable<int> oldValue =  _rootID;
    			bool stopChanging = false;
                On_RootID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("RootID");
    			if(!stopChanging)
    			{
    				_rootID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("RootID");
    				On_RootID_Changed(oldValue, _rootID);//\\
    			}
            }
        }
    	public static String RootID_PropertyName { get { return "RootID"; } }
        private Nullable<int> _rootID;
        partial void On_RootID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_RootID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ParentID
        {
            get
            {
                return _parentID;
            }
            set
            {
    			Nullable<int> oldValue =  _parentID;
    			bool stopChanging = false;
                On_ParentID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentID");
    			if(!stopChanging)
    			{
    				_parentID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentID");
    				On_ParentID_Changed(oldValue, _parentID);//\\
    			}
            }
        }
    	public static String ParentID_PropertyName { get { return "ParentID"; } }
        private Nullable<int> _parentID;
        partial void On_ParentID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ParentID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Note
        {
            get
            {
                return _note;
            }
            set
            {
    			string oldValue =  _note;
    			bool stopChanging = false;
                On_Note_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Note");
    			if(!stopChanging)
    			{
    				_note = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Note");
    				On_Note_Changed(oldValue, _note);//\\
    			}
            }
        }
    	public static String Note_PropertyName { get { return "Note"; } }
        private string _note;
        partial void On_Note_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Note_Changed(string oldValue, string currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Reports_Reports", "Report1")]
        public EntityCollection<Report> Reports1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("PSC_ERPModel.FK_Reports_Reports", "Report1");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Reports1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("PSC_ERPModel.FK_Reports_Reports", "Report1", value);
    					On_Reports1_Changed(this.Reports1);//\\//
    				}
    			}
            }
        }
    	public static String Reports1_EntityCollectionPropertyName { get { return "Reports1"; } }
    	partial void On_Reports1_Changing(ref EntityCollection<Report> newValue, ref bool stopChanging);
    	partial void On_Reports1_Changed(EntityCollection<Report> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Reports_Reports", "Report")]
        public Report Report1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports", "Report").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Report1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports", "Report").Value = value;
    				On_Report1_Changed(this.Report1);//\\//
    			}
    	    }
        }
    	public static String Report1_ReferencePropertyName { get { return "Report1"; } }
    	partial void On_Report1_Changing(ref Report newValue, ref bool stopChanging);
    	partial void On_Report1_Changed(Report currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> Report1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Reports_Reports1", "Report1")]
        public EntityCollection<Report> Reports11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("PSC_ERPModel.FK_Reports_Reports1", "Report1");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Reports11_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("PSC_ERPModel.FK_Reports_Reports1", "Report1", value);
    					On_Reports11_Changed(this.Reports11);//\\//
    				}
    			}
            }
        }
    	public static String Reports11_EntityCollectionPropertyName { get { return "Reports11"; } }
    	partial void On_Reports11_Changing(ref EntityCollection<Report> newValue, ref bool stopChanging);
    	partial void On_Reports11_Changed(EntityCollection<Report> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Reports_Reports1", "Report")]
        public Report Report2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports1", "Report").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Report2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports1", "Report").Value = value;
    				On_Report2_Changed(this.Report2);//\\//
    			}
    	    }
        }
    	public static String Report2_ReferencePropertyName { get { return "Report2"; } }
    	partial void On_Report2_Changing(ref Report newValue, ref bool stopChanging);
    	partial void On_Report2_Changed(Report currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> Report2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports1", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("PSC_ERPModel.FK_Reports_Reports1", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Reports_app_users", "app_users")]
        public app_users app_users
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_Reports_app_users", "app_users").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_app_users_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_Reports_app_users", "app_users").Value = value;
    				On_app_users_Changed(this.app_users);//\\//
    			}
    	    }
        }
    	public static String app_users_ReferencePropertyName { get { return "app_users"; } }
    	partial void On_app_users_Changing(ref app_users newValue, ref bool stopChanging);
    	partial void On_app_users_Changed(app_users currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<app_users> app_usersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_Reports_app_users", "app_users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<app_users>("PSC_ERPModel.FK_Reports_app_users", "app_users", value);
                }
            }
        }

        #endregion

    }
}
