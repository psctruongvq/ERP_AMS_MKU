//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public Project()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Project CreateProject(int id)
        {
            Project project = new Project();
            project.ID = id;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int ID
        {
            get
            {
                return _iD;
            }
            set
            {
                if (_iD != value)
                {
        			int oldValue =  _iD;
        			bool stopChanging = false;
                    On_ID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("ID");
        			if(!stopChanging)
        			{
        				_iD = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("ID");
        				On_ID_Changed(oldValue, _iD);//\\
        			}
                }
            }
        }
    	public static String ID_PropertyName { get { return "ID"; } }
        private int _iD;
        partial void On_ID_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_ID_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
    			string oldValue =  _name;
    			bool stopChanging = false;
                On_Name_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Name");
    			if(!stopChanging)
    			{
    				_name = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Name");
    				On_Name_Changed(oldValue, _name);//\\
    			}
            }
        }
    	public static String Name_PropertyName { get { return "Name"; } }
        private string _name;
        partial void On_Name_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Name_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreateDate
        {
            get
            {
                return _createDate;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _createDate;
    			bool stopChanging = false;
                On_CreateDate_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CreateDate");
    			if(!stopChanging)
    			{
    				_createDate = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CreateDate");
    				On_CreateDate_Changed(oldValue, _createDate);//\\
    			}
            }
        }
    	public static String CreateDate_PropertyName { get { return "CreateDate"; } }
        private Nullable<System.DateTime> _createDate;
        partial void On_CreateDate_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_CreateDate_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserID
        {
            get
            {
                return _userID;
            }
            set
            {
    			Nullable<int> oldValue =  _userID;
    			bool stopChanging = false;
                On_UserID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UserID");
    			if(!stopChanging)
    			{
    				_userID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("UserID");
    				On_UserID_Changed(oldValue, _userID);//\\
    			}
            }
        }
    	public static String UserID_PropertyName { get { return "UserID"; } }
        private Nullable<int> _userID;
        partial void On_UserID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_UserID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_ProjectEmployeeResource_Project", "ProjectEmployeeResource")]
        public EntityCollection<ProjectEmployeeResource> ProjectEmployeeResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEmployeeResource>("PSC_ERPModel.FK_ProjectEmployeeResource_Project", "ProjectEmployeeResource");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_ProjectEmployeeResources_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEmployeeResource>("PSC_ERPModel.FK_ProjectEmployeeResource_Project", "ProjectEmployeeResource", value);
    					On_ProjectEmployeeResources_Changed(this.ProjectEmployeeResources);//\\//
    				}
    			}
            }
        }
    	public static String ProjectEmployeeResources_EntityCollectionPropertyName { get { return "ProjectEmployeeResources"; } }
    	partial void On_ProjectEmployeeResources_Changing(ref EntityCollection<ProjectEmployeeResource> newValue, ref bool stopChanging);
    	partial void On_ProjectEmployeeResources_Changed(EntityCollection<ProjectEmployeeResource> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Resource_Project", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("PSC_ERPModel.FK_Resource_Project", "Resource");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Resources_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("PSC_ERPModel.FK_Resource_Project", "Resource", value);
    					On_Resources_Changed(this.Resources);//\\//
    				}
    			}
            }
        }
    	public static String Resources_EntityCollectionPropertyName { get { return "Resources"; } }
    	partial void On_Resources_Changing(ref EntityCollection<Resource> newValue, ref bool stopChanging);
    	partial void On_Resources_Changed(EntityCollection<Resource> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_TaskDependencies_Project", "TaskDependency")]
        public EntityCollection<TaskDependency> TaskDependencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskDependency>("PSC_ERPModel.FK_TaskDependencies_Project", "TaskDependency");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_TaskDependencies_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskDependency>("PSC_ERPModel.FK_TaskDependencies_Project", "TaskDependency", value);
    					On_TaskDependencies_Changed(this.TaskDependencies);//\\//
    				}
    			}
            }
        }
    	public static String TaskDependencies_EntityCollectionPropertyName { get { return "TaskDependencies"; } }
    	partial void On_TaskDependencies_Changing(ref EntityCollection<TaskDependency> newValue, ref bool stopChanging);
    	partial void On_TaskDependencies_Changed(EntityCollection<TaskDependency> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Tasks_Project", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("PSC_ERPModel.FK_Tasks_Project", "Task");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Tasks_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("PSC_ERPModel.FK_Tasks_Project", "Task", value);
    					On_Tasks_Changed(this.Tasks);//\\//
    				}
    			}
            }
        }
    	public static String Tasks_EntityCollectionPropertyName { get { return "Tasks"; } }
    	partial void On_Tasks_Changing(ref EntityCollection<Task> newValue, ref bool stopChanging);
    	partial void On_Tasks_Changed(EntityCollection<Task> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Project_appusers", "app_users")]
        public app_users app_users
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_Project_appusers", "app_users").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_app_users_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_Project_appusers", "app_users").Value = value;
    				On_app_users_Changed(this.app_users);//\\//
    			}
    	    }
        }
    	public static String app_users_ReferencePropertyName { get { return "app_users"; } }
    	partial void On_app_users_Changing(ref app_users newValue, ref bool stopChanging);
    	partial void On_app_users_Changed(app_users currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<app_users> app_usersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_Project_appusers", "app_users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<app_users>("PSC_ERPModel.FK_Project_appusers", "app_users", value);
                }
            }
        }

        #endregion

    }
}
