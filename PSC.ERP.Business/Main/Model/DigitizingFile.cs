//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi ADMIN-PC\CUONG luc 03:23:57 ngay 28/07/2015
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="DigitizingFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DigitizingFile : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public DigitizingFile()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new DigitizingFile object.
        /// </summary>
        /// <param name="idx">Initial value of the Idx property.</param>
        /// <param name="fileId">Initial value of the FileId property.</param>
        public static DigitizingFile CreateDigitizingFile(long idx, System.Guid fileId)
        {
            DigitizingFile digitizingFile = new DigitizingFile();
            digitizingFile.Idx = idx;
            digitizingFile.FileId = fileId;
            return digitizingFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public long Idx
        {
            get
            {
                return _idx;
            }
            set
            {
    			long oldValue =  _idx;
    			bool stopChanging = false;
                On_Idx_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Idx");
    			if(!stopChanging)
    			{
    				_idx = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Idx");
    				On_Idx_Changed(oldValue, _idx);//\\
    			}
            }
        }
    	public static String Idx_PropertyName { get { return "Idx"; } }
        private long _idx;
        partial void On_Idx_Changing(long currentValue, ref long newValue, ref bool stopChanging);
        partial void On_Idx_Changed(long oldValue, long currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid FileId
        {
            get
            {
                return _fileId;
            }
            set
            {
                if (_fileId != value)
                {
        			System.Guid oldValue =  _fileId;
        			bool stopChanging = false;
                    On_FileId_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("FileId");
        			if(!stopChanging)
        			{
        				_fileId = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("FileId");
        				On_FileId_Changed(oldValue, _fileId);//\\
        			}
                }
            }
        }
    	public static String FileId_PropertyName { get { return "FileId"; } }
        private System.Guid _fileId;
        partial void On_FileId_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_FileId_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> BagId
        {
            get
            {
                return _bagId;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _bagId;
    			bool stopChanging = false;
                On_BagId_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BagId");
    			if(!stopChanging)
    			{
    				_bagId = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BagId");
    				On_BagId_Changed(oldValue, _bagId);//\\
    			}
            }
        }
    	public static String BagId_PropertyName { get { return "BagId"; } }
        private Nullable<System.Guid> _bagId;
        partial void On_BagId_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_BagId_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
    			string oldValue =  _name;
    			bool stopChanging = false;
                On_Name_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Name");
    			if(!stopChanging)
    			{
    				_name = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Name");
    				On_Name_Changed(oldValue, _name);//\\
    			}
            }
        }
    	public static String Name_PropertyName { get { return "Name"; } }
        private string _name;
        partial void On_Name_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Name_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OriginalFileName
        {
            get
            {
                return _originalFileName;
            }
            set
            {
    			string oldValue =  _originalFileName;
    			bool stopChanging = false;
                On_OriginalFileName_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OriginalFileName");
    			if(!stopChanging)
    			{
    				_originalFileName = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("OriginalFileName");
    				On_OriginalFileName_Changed(oldValue, _originalFileName);//\\
    			}
            }
        }
    	public static String OriginalFileName_PropertyName { get { return "OriginalFileName"; } }
        private string _originalFileName;
        partial void On_OriginalFileName_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_OriginalFileName_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UploadFromFilePath
        {
            get
            {
                return _uploadFromFilePath;
            }
            set
            {
    			string oldValue =  _uploadFromFilePath;
    			bool stopChanging = false;
                On_UploadFromFilePath_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UploadFromFilePath");
    			if(!stopChanging)
    			{
    				_uploadFromFilePath = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("UploadFromFilePath");
    				On_UploadFromFilePath_Changed(oldValue, _uploadFromFilePath);//\\
    			}
            }
        }
    	public static String UploadFromFilePath_PropertyName { get { return "UploadFromFilePath"; } }
        private string _uploadFromFilePath;
        partial void On_UploadFromFilePath_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_UploadFromFilePath_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UploadFromComputerUser
        {
            get
            {
                return _uploadFromComputerUser;
            }
            set
            {
    			string oldValue =  _uploadFromComputerUser;
    			bool stopChanging = false;
                On_UploadFromComputerUser_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UploadFromComputerUser");
    			if(!stopChanging)
    			{
    				_uploadFromComputerUser = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("UploadFromComputerUser");
    				On_UploadFromComputerUser_Changed(oldValue, _uploadFromComputerUser);//\\
    			}
            }
        }
    	public static String UploadFromComputerUser_PropertyName { get { return "UploadFromComputerUser"; } }
        private string _uploadFromComputerUser;
        partial void On_UploadFromComputerUser_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_UploadFromComputerUser_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UploadFromIPAddress
        {
            get
            {
                return _uploadFromIPAddress;
            }
            set
            {
    			string oldValue =  _uploadFromIPAddress;
    			bool stopChanging = false;
                On_UploadFromIPAddress_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UploadFromIPAddress");
    			if(!stopChanging)
    			{
    				_uploadFromIPAddress = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("UploadFromIPAddress");
    				On_UploadFromIPAddress_Changed(oldValue, _uploadFromIPAddress);//\\
    			}
            }
        }
    	public static String UploadFromIPAddress_PropertyName { get { return "UploadFromIPAddress"; } }
        private string _uploadFromIPAddress;
        partial void On_UploadFromIPAddress_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_UploadFromIPAddress_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Uploaded
        {
            get
            {
                return _uploaded;
            }
            set
            {
    			Nullable<bool> oldValue =  _uploaded;
    			bool stopChanging = false;
                On_Uploaded_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Uploaded");
    			if(!stopChanging)
    			{
    				_uploaded = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Uploaded");
    				On_Uploaded_Changed(oldValue, _uploaded);//\\
    			}
            }
        }
    	public static String Uploaded_PropertyName { get { return "Uploaded"; } }
        private Nullable<bool> _uploaded;
        partial void On_Uploaded_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Uploaded_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Indexed
        {
            get
            {
                return _indexed;
            }
            set
            {
    			Nullable<bool> oldValue =  _indexed;
    			bool stopChanging = false;
                On_Indexed_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Indexed");
    			if(!stopChanging)
    			{
    				_indexed = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Indexed");
    				On_Indexed_Changed(oldValue, _indexed);//\\
    			}
            }
        }
    	public static String Indexed_PropertyName { get { return "Indexed"; } }
        private Nullable<bool> _indexed;
        partial void On_Indexed_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Indexed_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreatedDateTime
        {
            get
            {
                return _createdDateTime;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _createdDateTime;
    			bool stopChanging = false;
                On_CreatedDateTime_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CreatedDateTime");
    			if(!stopChanging)
    			{
    				_createdDateTime = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CreatedDateTime");
    				On_CreatedDateTime_Changed(oldValue, _createdDateTime);//\\
    			}
            }
        }
    	public static String CreatedDateTime_PropertyName { get { return "CreatedDateTime"; } }
        private Nullable<System.DateTime> _createdDateTime;
        partial void On_CreatedDateTime_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_CreatedDateTime_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _userId;
            }
            set
            {
    			Nullable<int> oldValue =  _userId;
    			bool stopChanging = false;
                On_UserId_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UserId");
    			if(!stopChanging)
    			{
    				_userId = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("UserId");
    				On_UserId_Changed(oldValue, _userId);//\\
    			}
            }
        }
    	public static String UserId_PropertyName { get { return "UserId"; } }
        private Nullable<int> _userId;
        partial void On_UserId_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_UserId_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_DigitizingFile_app_users", "app_users")]
        public app_users app_users
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_DigitizingFile_app_users", "app_users").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_app_users_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_DigitizingFile_app_users", "app_users").Value = value;
    				On_app_users_Changed(this.app_users);//\\//
    			}
    	    }
        }
    	public static String app_users_ReferencePropertyName { get { return "app_users"; } }
    	partial void On_app_users_Changing(ref app_users newValue, ref bool stopChanging);
    	partial void On_app_users_Changed(app_users currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<app_users> app_usersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<app_users>("PSC_ERPModel.FK_DigitizingFile_app_users", "app_users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<app_users>("PSC_ERPModel.FK_DigitizingFile_app_users", "app_users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_DigitizingFile_DigitizingBag", "DigitizingBag")]
        public DigitizingBag DigitizingBag
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DigitizingBag>("PSC_ERPModel.FK_DigitizingFile_DigitizingBag", "DigitizingBag").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_DigitizingBag_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DigitizingBag>("PSC_ERPModel.FK_DigitizingFile_DigitizingBag", "DigitizingBag").Value = value;
    				On_DigitizingBag_Changed(this.DigitizingBag);//\\//
    			}
    	    }
        }
    	public static String DigitizingBag_ReferencePropertyName { get { return "DigitizingBag"; } }
    	partial void On_DigitizingBag_Changing(ref DigitizingBag newValue, ref bool stopChanging);
    	partial void On_DigitizingBag_Changed(DigitizingBag currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DigitizingBag> DigitizingBagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DigitizingBag>("PSC_ERPModel.FK_DigitizingFile_DigitizingBag", "DigitizingBag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DigitizingBag>("PSC_ERPModel.FK_DigitizingFile_DigitizingBag", "DigitizingBag", value);
                }
            }
        }

        #endregion

    }
}
