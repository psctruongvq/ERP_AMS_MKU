//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public Resource()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Resource CreateResource(System.Guid id)
        {
            Resource resource = new Resource();
            resource.ID = id;
            return resource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return _iD;
            }
            set
            {
                if (_iD != value)
                {
        			System.Guid oldValue =  _iD;
        			bool stopChanging = false;
                    On_ID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("ID");
        			if(!stopChanging)
        			{
        				_iD = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("ID");
        				On_ID_Changed(oldValue, _iD);//\\
        			}
                }
            }
        }
    	public static String ID_PropertyName { get { return "ID"; } }
        private System.Guid _iD;
        partial void On_ID_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_ID_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ParentID
        {
            get
            {
                return _parentID;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _parentID;
    			bool stopChanging = false;
                On_ParentID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentID");
    			if(!stopChanging)
    			{
    				_parentID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentID");
    				On_ParentID_Changed(oldValue, _parentID);//\\
    			}
            }
        }
    	public static String ParentID_PropertyName { get { return "ParentID"; } }
        private Nullable<System.Guid> _parentID;
        partial void On_ParentID_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ParentID_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectID
        {
            get
            {
                return _projectID;
            }
            set
            {
    			Nullable<int> oldValue =  _projectID;
    			bool stopChanging = false;
                On_ProjectID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ProjectID");
    			if(!stopChanging)
    			{
    				_projectID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ProjectID");
    				On_ProjectID_Changed(oldValue, _projectID);//\\
    			}
            }
        }
    	public static String ProjectID_PropertyName { get { return "ProjectID"; } }
        private Nullable<int> _projectID;
        partial void On_ProjectID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ProjectID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DaysPlanned
        {
            get
            {
                return _daysPlanned;
            }
            set
            {
    			Nullable<byte> oldValue =  _daysPlanned;
    			bool stopChanging = false;
                On_DaysPlanned_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DaysPlanned");
    			if(!stopChanging)
    			{
    				_daysPlanned = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DaysPlanned");
    				On_DaysPlanned_Changed(oldValue, _daysPlanned);//\\
    			}
            }
        }
    	public static String DaysPlanned_PropertyName { get { return "DaysPlanned"; } }
        private Nullable<byte> _daysPlanned;
        partial void On_DaysPlanned_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_DaysPlanned_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Resource_Resource", "Resource1")]
        public EntityCollection<Resource> Resource1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("PSC_ERPModel.FK_Resource_Resource", "Resource1");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Resource1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("PSC_ERPModel.FK_Resource_Resource", "Resource1", value);
    					On_Resource1_Changed(this.Resource1);//\\//
    				}
    			}
            }
        }
    	public static String Resource1_EntityCollectionPropertyName { get { return "Resource1"; } }
    	partial void On_Resource1_Changing(ref EntityCollection<Resource> newValue, ref bool stopChanging);
    	partial void On_Resource1_Changed(EntityCollection<Resource> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Resource_Resource", "Resource")]
        public Resource Resource2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("PSC_ERPModel.FK_Resource_Resource", "Resource").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Resource2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("PSC_ERPModel.FK_Resource_Resource", "Resource").Value = value;
    				On_Resource2_Changed(this.Resource2);//\\//
    			}
    	    }
        }
    	public static String Resource2_ReferencePropertyName { get { return "Resource2"; } }
    	partial void On_Resource2_Changing(ref Resource newValue, ref bool stopChanging);
    	partial void On_Resource2_Changed(Resource currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> Resource2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("PSC_ERPModel.FK_Resource_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("PSC_ERPModel.FK_Resource_Resource", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Tasks_Resource", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("PSC_ERPModel.FK_Tasks_Resource", "Task");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Tasks_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("PSC_ERPModel.FK_Tasks_Resource", "Task", value);
    					On_Tasks_Changed(this.Tasks);//\\//
    				}
    			}
            }
        }
    	public static String Tasks_EntityCollectionPropertyName { get { return "Tasks"; } }
    	partial void On_Tasks_Changing(ref EntityCollection<Task> newValue, ref bool stopChanging);
    	partial void On_Tasks_Changed(EntityCollection<Task> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Resource_Project", "Project")]
        public Project Project
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("PSC_ERPModel.FK_Resource_Project", "Project").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Project_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("PSC_ERPModel.FK_Resource_Project", "Project").Value = value;
    				On_Project_Changed(this.Project);//\\//
    			}
    	    }
        }
    	public static String Project_ReferencePropertyName { get { return "Project"; } }
    	partial void On_Project_Changing(ref Project newValue, ref bool stopChanging);
    	partial void On_Project_Changed(Project currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("PSC_ERPModel.FK_Resource_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("PSC_ERPModel.FK_Resource_Project", "Project", value);
                }
            }
        }

        #endregion

    }
}
