//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:32 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PSC_ERPModel", Name="spd_TimFileDaDuocGanChungTu_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class spd_TimFileDaDuocGanChungTu_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spd_TimFileDaDuocGanChungTu_Result object.
        /// </summary>
        /// <param name="bagId">Initial value of the BagId property.</param>
        public static spd_TimFileDaDuocGanChungTu_Result Createspd_TimFileDaDuocGanChungTu_Result(System.Guid bagId)
        {
            spd_TimFileDaDuocGanChungTu_Result spd_TimFileDaDuocGanChungTu_Result = new spd_TimFileDaDuocGanChungTu_Result();
            spd_TimFileDaDuocGanChungTu_Result.BagId = bagId;
            return spd_TimFileDaDuocGanChungTu_Result;
        }

        #endregion

    #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid BagId
        {
            get
            {
                return _bagId;
            }
            set
            {
    			System.Guid oldValue =  _bagId;
    			bool stopChanging = false;
                On_BagId_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BagId");
    			if(!stopChanging)
    			{
    				_bagId = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BagId");
    				On_BagId_Changed(oldValue, _bagId);//\\
    			}
            }
        }
    	public static String BagId_PropertyName { get { return "BagId"; } }
        private System.Guid _bagId;
        partial void On_BagId_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_BagId_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ParentBagId
        {
            get
            {
                return _parentBagId;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _parentBagId;
    			bool stopChanging = false;
                On_ParentBagId_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentBagId");
    			if(!stopChanging)
    			{
    				_parentBagId = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentBagId");
    				On_ParentBagId_Changed(oldValue, _parentBagId);//\\
    			}
            }
        }
    	public static String ParentBagId_PropertyName { get { return "ParentBagId"; } }
        private Nullable<System.Guid> _parentBagId;
        partial void On_ParentBagId_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ParentBagId_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> HashCode
        {
            get
            {
                return _hashCode;
            }
            set
            {
    			Nullable<int> oldValue =  _hashCode;
    			bool stopChanging = false;
                On_HashCode_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HashCode");
    			if(!stopChanging)
    			{
    				_hashCode = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HashCode");
    				On_HashCode_Changed(oldValue, _hashCode);//\\
    			}
            }
        }
    	public static String HashCode_PropertyName { get { return "HashCode"; } }
        private Nullable<int> _hashCode;
        partial void On_HashCode_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_HashCode_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> SoTrang
        {
            get
            {
                return _soTrang;
            }
            set
            {
    			Nullable<int> oldValue =  _soTrang;
    			bool stopChanging = false;
                On_SoTrang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoTrang");
    			if(!stopChanging)
    			{
    				_soTrang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoTrang");
    				On_SoTrang_Changed(oldValue, _soTrang);//\\
    			}
            }
        }
    	public static String SoTrang_PropertyName { get { return "SoTrang"; } }
        private Nullable<int> _soTrang;
        partial void On_SoTrang_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_SoTrang_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
    			string oldValue =  _name;
    			bool stopChanging = false;
                On_Name_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Name");
    			if(!stopChanging)
    			{
    				_name = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Name");
    				On_Name_Changed(oldValue, _name);//\\
    			}
            }
        }
    	public static String Name_PropertyName { get { return "Name"; } }
        private string _name;
        partial void On_Name_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Name_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreatedDateTime
        {
            get
            {
                return _createdDateTime;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _createdDateTime;
    			bool stopChanging = false;
                On_CreatedDateTime_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CreatedDateTime");
    			if(!stopChanging)
    			{
    				_createdDateTime = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CreatedDateTime");
    				On_CreatedDateTime_Changed(oldValue, _createdDateTime);//\\
    			}
            }
        }
    	public static String CreatedDateTime_PropertyName { get { return "CreatedDateTime"; } }
        private Nullable<System.DateTime> _createdDateTime;
        partial void On_CreatedDateTime_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_CreatedDateTime_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CreatedUser
        {
            get
            {
                return _createdUser;
            }
            set
            {
    			Nullable<int> oldValue =  _createdUser;
    			bool stopChanging = false;
                On_CreatedUser_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CreatedUser");
    			if(!stopChanging)
    			{
    				_createdUser = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CreatedUser");
    				On_CreatedUser_Changed(oldValue, _createdUser);//\\
    			}
            }
        }
    	public static String CreatedUser_PropertyName { get { return "CreatedUser"; } }
        private Nullable<int> _createdUser;
        partial void On_CreatedUser_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_CreatedUser_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MaBoPhan
        {
            get
            {
                return _maBoPhan;
            }
            set
            {
    			Nullable<int> oldValue =  _maBoPhan;
    			bool stopChanging = false;
                On_MaBoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaBoPhan");
    			if(!stopChanging)
    			{
    				_maBoPhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaBoPhan");
    				On_MaBoPhan_Changed(oldValue, _maBoPhan);//\\
    			}
            }
        }
    	public static String MaBoPhan_PropertyName { get { return "MaBoPhan"; } }
        private Nullable<int> _maBoPhan;
        partial void On_MaBoPhan_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_MaBoPhan_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsFile
        {
            get
            {
                return _isFile;
            }
            set
            {
    			Nullable<bool> oldValue =  _isFile;
    			bool stopChanging = false;
                On_IsFile_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IsFile");
    			if(!stopChanging)
    			{
    				_isFile = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IsFile");
    				On_IsFile_Changed(oldValue, _isFile);//\\
    			}
            }
        }
    	public static String IsFile_PropertyName { get { return "IsFile"; } }
        private Nullable<bool> _isFile;
        partial void On_IsFile_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_IsFile_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MaLoaiChungTu
        {
            get
            {
                return _maLoaiChungTu;
            }
            set
            {
    			Nullable<int> oldValue =  _maLoaiChungTu;
    			bool stopChanging = false;
                On_MaLoaiChungTu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaLoaiChungTu");
    			if(!stopChanging)
    			{
    				_maLoaiChungTu = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaLoaiChungTu");
    				On_MaLoaiChungTu_Changed(oldValue, _maLoaiChungTu);//\\
    			}
            }
        }
    	public static String MaLoaiChungTu_PropertyName { get { return "MaLoaiChungTu"; } }
        private Nullable<int> _maLoaiChungTu;
        partial void On_MaLoaiChungTu_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_MaLoaiChungTu_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OriginalFileName
        {
            get
            {
                return _originalFileName;
            }
            set
            {
    			string oldValue =  _originalFileName;
    			bool stopChanging = false;
                On_OriginalFileName_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OriginalFileName");
    			if(!stopChanging)
    			{
    				_originalFileName = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("OriginalFileName");
    				On_OriginalFileName_Changed(oldValue, _originalFileName);//\\
    			}
            }
        }
    	public static String OriginalFileName_PropertyName { get { return "OriginalFileName"; } }
        private string _originalFileName;
        partial void On_OriginalFileName_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_OriginalFileName_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UploadFromFilePath
        {
            get
            {
                return _uploadFromFilePath;
            }
            set
            {
    			string oldValue =  _uploadFromFilePath;
    			bool stopChanging = false;
                On_UploadFromFilePath_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UploadFromFilePath");
    			if(!stopChanging)
    			{
    				_uploadFromFilePath = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("UploadFromFilePath");
    				On_UploadFromFilePath_Changed(oldValue, _uploadFromFilePath);//\\
    			}
            }
        }
    	public static String UploadFromFilePath_PropertyName { get { return "UploadFromFilePath"; } }
        private string _uploadFromFilePath;
        partial void On_UploadFromFilePath_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_UploadFromFilePath_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UploadFromComputerUser
        {
            get
            {
                return _uploadFromComputerUser;
            }
            set
            {
    			string oldValue =  _uploadFromComputerUser;
    			bool stopChanging = false;
                On_UploadFromComputerUser_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UploadFromComputerUser");
    			if(!stopChanging)
    			{
    				_uploadFromComputerUser = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("UploadFromComputerUser");
    				On_UploadFromComputerUser_Changed(oldValue, _uploadFromComputerUser);//\\
    			}
            }
        }
    	public static String UploadFromComputerUser_PropertyName { get { return "UploadFromComputerUser"; } }
        private string _uploadFromComputerUser;
        partial void On_UploadFromComputerUser_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_UploadFromComputerUser_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UploadFromIPAddress
        {
            get
            {
                return _uploadFromIPAddress;
            }
            set
            {
    			string oldValue =  _uploadFromIPAddress;
    			bool stopChanging = false;
                On_UploadFromIPAddress_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UploadFromIPAddress");
    			if(!stopChanging)
    			{
    				_uploadFromIPAddress = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("UploadFromIPAddress");
    				On_UploadFromIPAddress_Changed(oldValue, _uploadFromIPAddress);//\\
    			}
            }
        }
    	public static String UploadFromIPAddress_PropertyName { get { return "UploadFromIPAddress"; } }
        private string _uploadFromIPAddress;
        partial void On_UploadFromIPAddress_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_UploadFromIPAddress_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> FileUploadCompleted
        {
            get
            {
                return _fileUploadCompleted;
            }
            set
            {
    			Nullable<bool> oldValue =  _fileUploadCompleted;
    			bool stopChanging = false;
                On_FileUploadCompleted_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("FileUploadCompleted");
    			if(!stopChanging)
    			{
    				_fileUploadCompleted = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("FileUploadCompleted");
    				On_FileUploadCompleted_Changed(oldValue, _fileUploadCompleted);//\\
    			}
            }
        }
    	public static String FileUploadCompleted_PropertyName { get { return "FileUploadCompleted"; } }
        private Nullable<bool> _fileUploadCompleted;
        partial void On_FileUploadCompleted_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_FileUploadCompleted_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> FileIndexed
        {
            get
            {
                return _fileIndexed;
            }
            set
            {
    			Nullable<bool> oldValue =  _fileIndexed;
    			bool stopChanging = false;
                On_FileIndexed_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("FileIndexed");
    			if(!stopChanging)
    			{
    				_fileIndexed = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("FileIndexed");
    				On_FileIndexed_Changed(oldValue, _fileIndexed);//\\
    			}
            }
        }
    	public static String FileIndexed_PropertyName { get { return "FileIndexed"; } }
        private Nullable<bool> _fileIndexed;
        partial void On_FileIndexed_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_FileIndexed_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> FolderYear
        {
            get
            {
                return _folderYear;
            }
            set
            {
    			Nullable<int> oldValue =  _folderYear;
    			bool stopChanging = false;
                On_FolderYear_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("FolderYear");
    			if(!stopChanging)
    			{
    				_folderYear = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("FolderYear");
    				On_FolderYear_Changed(oldValue, _folderYear);//\\
    			}
            }
        }
    	public static String FolderYear_PropertyName { get { return "FolderYear"; } }
        private Nullable<int> _folderYear;
        partial void On_FolderYear_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_FolderYear_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<long> MaChungTu
        {
            get
            {
                return _maChungTu;
            }
            set
            {
    			Nullable<long> oldValue =  _maChungTu;
    			bool stopChanging = false;
                On_MaChungTu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaChungTu");
    			if(!stopChanging)
    			{
    				_maChungTu = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaChungTu");
    				On_MaChungTu_Changed(oldValue, _maChungTu);//\\
    			}
            }
        }
    	public static String MaChungTu_PropertyName { get { return "MaChungTu"; } }
        private Nullable<long> _maChungTu;
        partial void On_MaChungTu_Changing(Nullable<long> currentValue, ref Nullable<long> newValue, ref bool stopChanging);
        partial void On_MaChungTu_Changed(Nullable<long> oldValue, Nullable<long> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SoChungTu
        {
            get
            {
                return _soChungTu;
            }
            set
            {
    			string oldValue =  _soChungTu;
    			bool stopChanging = false;
                On_SoChungTu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoChungTu");
    			if(!stopChanging)
    			{
    				_soChungTu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("SoChungTu");
    				On_SoChungTu_Changed(oldValue, _soChungTu);//\\
    			}
            }
        }
    	public static String SoChungTu_PropertyName { get { return "SoChungTu"; } }
        private string _soChungTu;
        partial void On_SoChungTu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_SoChungTu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CapDoCay
        {
            get
            {
                return _capDoCay;
            }
            set
            {
    			Nullable<int> oldValue =  _capDoCay;
    			bool stopChanging = false;
                On_CapDoCay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CapDoCay");
    			if(!stopChanging)
    			{
    				_capDoCay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CapDoCay");
    				On_CapDoCay_Changed(oldValue, _capDoCay);//\\
    			}
            }
        }
    	public static String CapDoCay_PropertyName { get { return "CapDoCay"; } }
        private Nullable<int> _capDoCay;
        partial void On_CapDoCay_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_CapDoCay_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsDatabase
        {
            get
            {
                return _isDatabase;
            }
            set
            {
    			Nullable<bool> oldValue =  _isDatabase;
    			bool stopChanging = false;
                On_IsDatabase_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IsDatabase");
    			if(!stopChanging)
    			{
    				_isDatabase = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IsDatabase");
    				On_IsDatabase_Changed(oldValue, _isDatabase);//\\
    			}
            }
        }
    	public static String IsDatabase_PropertyName { get { return "IsDatabase"; } }
        private Nullable<bool> _isDatabase;
        partial void On_IsDatabase_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_IsDatabase_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);

    #endregion

    }
}
