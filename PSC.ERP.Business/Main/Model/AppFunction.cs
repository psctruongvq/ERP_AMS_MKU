//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="AppFunction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppFunction : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public AppFunction()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new AppFunction object.
        /// </summary>
        /// <param name="functionID">Initial value of the FunctionID property.</param>
        public static AppFunction CreateAppFunction(int functionID)
        {
            AppFunction appFunction = new AppFunction();
            appFunction.FunctionID = functionID;
            return appFunction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int FunctionID
        {
            get
            {
                return _functionID;
            }
            set
            {
                if (_functionID != value)
                {
        			int oldValue =  _functionID;
        			bool stopChanging = false;
                    On_FunctionID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("FunctionID");
        			if(!stopChanging)
        			{
        				_functionID = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("FunctionID");
        				On_FunctionID_Changed(oldValue, _functionID);//\\
        			}
                }
            }
        }
    	public static String FunctionID_PropertyName { get { return "FunctionID"; } }
        private int _functionID;
        partial void On_FunctionID_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_FunctionID_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FunctionName
        {
            get
            {
                return _functionName;
            }
            set
            {
    			string oldValue =  _functionName;
    			bool stopChanging = false;
                On_FunctionName_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("FunctionName");
    			if(!stopChanging)
    			{
    				_functionName = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("FunctionName");
    				On_FunctionName_Changed(oldValue, _functionName);//\\
    			}
            }
        }
    	public static String FunctionName_PropertyName { get { return "FunctionName"; } }
        private string _functionName;
        partial void On_FunctionName_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_FunctionName_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string NamespaceAndClassName
        {
            get
            {
                return _namespaceAndClassName;
            }
            set
            {
    			string oldValue =  _namespaceAndClassName;
    			bool stopChanging = false;
                On_NamespaceAndClassName_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NamespaceAndClassName");
    			if(!stopChanging)
    			{
    				_namespaceAndClassName = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("NamespaceAndClassName");
    				On_NamespaceAndClassName_Changed(oldValue, _namespaceAndClassName);//\\
    			}
            }
        }
    	public static String NamespaceAndClassName_PropertyName { get { return "NamespaceAndClassName"; } }
        private string _namespaceAndClassName;
        partial void On_NamespaceAndClassName_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_NamespaceAndClassName_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> LocalIdx
        {
            get
            {
                return _localIdx;
            }
            set
            {
    			Nullable<int> oldValue =  _localIdx;
    			bool stopChanging = false;
                On_LocalIdx_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LocalIdx");
    			if(!stopChanging)
    			{
    				_localIdx = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LocalIdx");
    				On_LocalIdx_Changed(oldValue, _localIdx);//\\
    			}
            }
        }
    	public static String LocalIdx_PropertyName { get { return "LocalIdx"; } }
        private Nullable<int> _localIdx;
        partial void On_LocalIdx_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_LocalIdx_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GlobalIdx
        {
            get
            {
                return _globalIdx;
            }
            set
            {
    			Nullable<int> oldValue =  _globalIdx;
    			bool stopChanging = false;
                On_GlobalIdx_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GlobalIdx");
    			if(!stopChanging)
    			{
    				_globalIdx = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GlobalIdx");
    				On_GlobalIdx_Changed(oldValue, _globalIdx);//\\
    			}
            }
        }
    	public static String GlobalIdx_PropertyName { get { return "GlobalIdx"; } }
        private Nullable<int> _globalIdx;
        partial void On_GlobalIdx_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GlobalIdx_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Type
        {
            get
            {
                return _type;
            }
            set
            {
    			string oldValue =  _type;
    			bool stopChanging = false;
                On_Type_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Type");
    			if(!stopChanging)
    			{
    				_type = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Type");
    				On_Type_Changed(oldValue, _type);//\\
    			}
            }
        }
    	public static String Type_PropertyName { get { return "Type"; } }
        private string _type;
        partial void On_Type_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Type_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_image);
            }
            set
            {
    			byte[] oldValue =  _image;
    			bool stopChanging = false;
                On_Image_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Image");
    			if(!stopChanging)
    			{
    				_image = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Image");
    				On_Image_Changed(oldValue, _image);//\\
    			}
            }
        }
    	public static String Image_PropertyName { get { return "Image"; } }
        private byte[] _image;
        partial void On_Image_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_Image_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> ShowDialog
        {
            get
            {
                return _showDialog;
            }
            set
            {
    			Nullable<bool> oldValue =  _showDialog;
    			bool stopChanging = false;
                On_ShowDialog_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ShowDialog");
    			if(!stopChanging)
    			{
    				_showDialog = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ShowDialog");
    				On_ShowDialog_Changed(oldValue, _showDialog);//\\
    			}
            }
        }
    	public static String ShowDialog_PropertyName { get { return "ShowDialog"; } }
        private Nullable<bool> _showDialog;
        partial void On_ShowDialog_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_ShowDialog_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string StartPosition
        {
            get
            {
                return _startPosition;
            }
            set
            {
    			string oldValue =  _startPosition;
    			bool stopChanging = false;
                On_StartPosition_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("StartPosition");
    			if(!stopChanging)
    			{
    				_startPosition = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("StartPosition");
    				On_StartPosition_Changed(oldValue, _startPosition);//\\
    			}
            }
        }
    	public static String StartPosition_PropertyName { get { return "StartPosition"; } }
        private string _startPosition;
        partial void On_StartPosition_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_StartPosition_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string WindowsState
        {
            get
            {
                return _windowsState;
            }
            set
            {
    			string oldValue =  _windowsState;
    			bool stopChanging = false;
                On_WindowsState_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("WindowsState");
    			if(!stopChanging)
    			{
    				_windowsState = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("WindowsState");
    				On_WindowsState_Changed(oldValue, _windowsState);//\\
    			}
            }
        }
    	public static String WindowsState_PropertyName { get { return "WindowsState"; } }
        private string _windowsState;
        partial void On_WindowsState_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_WindowsState_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsMdiChild
        {
            get
            {
                return _isMdiChild;
            }
            set
            {
    			Nullable<bool> oldValue =  _isMdiChild;
    			bool stopChanging = false;
                On_IsMdiChild_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IsMdiChild");
    			if(!stopChanging)
    			{
    				_isMdiChild = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IsMdiChild");
    				On_IsMdiChild_Changed(oldValue, _isMdiChild);//\\
    			}
            }
        }
    	public static String IsMdiChild_PropertyName { get { return "IsMdiChild"; } }
        private Nullable<bool> _isMdiChild;
        partial void On_IsMdiChild_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_IsMdiChild_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsMdiContainer
        {
            get
            {
                return _isMdiContainer;
            }
            set
            {
    			Nullable<bool> oldValue =  _isMdiContainer;
    			bool stopChanging = false;
                On_IsMdiContainer_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IsMdiContainer");
    			if(!stopChanging)
    			{
    				_isMdiContainer = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IsMdiContainer");
    				On_IsMdiContainer_Changed(oldValue, _isMdiContainer);//\\
    			}
            }
        }
    	public static String IsMdiContainer_PropertyName { get { return "IsMdiContainer"; } }
        private Nullable<bool> _isMdiContainer;
        partial void On_IsMdiContainer_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_IsMdiContainer_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PublicStaticSingletonProperty
        {
            get
            {
                return _publicStaticSingletonProperty;
            }
            set
            {
    			string oldValue =  _publicStaticSingletonProperty;
    			bool stopChanging = false;
                On_PublicStaticSingletonProperty_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("PublicStaticSingletonProperty");
    			if(!stopChanging)
    			{
    				_publicStaticSingletonProperty = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("PublicStaticSingletonProperty");
    				On_PublicStaticSingletonProperty_Changed(oldValue, _publicStaticSingletonProperty);//\\
    			}
            }
        }
    	public static String PublicStaticSingletonProperty_PropertyName { get { return "PublicStaticSingletonProperty"; } }
        private string _publicStaticSingletonProperty;
        partial void On_PublicStaticSingletonProperty_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_PublicStaticSingletonProperty_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PublicInitInstanceMethod
        {
            get
            {
                return _publicInitInstanceMethod;
            }
            set
            {
    			string oldValue =  _publicInitInstanceMethod;
    			bool stopChanging = false;
                On_PublicInitInstanceMethod_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("PublicInitInstanceMethod");
    			if(!stopChanging)
    			{
    				_publicInitInstanceMethod = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("PublicInitInstanceMethod");
    				On_PublicInitInstanceMethod_Changed(oldValue, _publicInitInstanceMethod);//\\
    			}
            }
        }
    	public static String PublicInitInstanceMethod_PropertyName { get { return "PublicInitInstanceMethod"; } }
        private string _publicInitInstanceMethod;
        partial void On_PublicInitInstanceMethod_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_PublicInitInstanceMethod_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PublicStaticMethod
        {
            get
            {
                return _publicStaticMethod;
            }
            set
            {
    			string oldValue =  _publicStaticMethod;
    			bool stopChanging = false;
                On_PublicStaticMethod_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("PublicStaticMethod");
    			if(!stopChanging)
    			{
    				_publicStaticMethod = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("PublicStaticMethod");
    				On_PublicStaticMethod_Changed(oldValue, _publicStaticMethod);//\\
    			}
            }
        }
    	public static String PublicStaticMethod_PropertyName { get { return "PublicStaticMethod"; } }
        private string _publicStaticMethod;
        partial void On_PublicStaticMethod_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_PublicStaticMethod_Changed(string oldValue, string currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_AppMenus_AppFunctions", "AppMenu")]
        public EntityCollection<AppMenu> AppMenus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppMenu>("PSC_ERPModel.FK_AppMenus_AppFunctions", "AppMenu");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_AppMenus_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppMenu>("PSC_ERPModel.FK_AppMenus_AppFunctions", "AppMenu", value);
    					On_AppMenus_Changed(this.AppMenus);//\\//
    				}
    			}
            }
        }
    	public static String AppMenus_EntityCollectionPropertyName { get { return "AppMenus"; } }
    	partial void On_AppMenus_Changing(ref EntityCollection<AppMenu> newValue, ref bool stopChanging);
    	partial void On_AppMenus_Changed(EntityCollection<AppMenu> currentValue);

        #endregion

    }
}
