//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="Task_Asset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task_Asset : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public Task_Asset()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new Task_Asset object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="assetID">Initial value of the AssetID property.</param>
        public static Task_Asset CreateTask_Asset(long taskID, int assetID)
        {
            Task_Asset task_Asset = new Task_Asset();
            task_Asset.TaskID = taskID;
            task_Asset.AssetID = assetID;
            return task_Asset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public long TaskID
        {
            get
            {
                return _taskID;
            }
            set
            {
                if (_taskID != value)
                {
        			long oldValue =  _taskID;
        			bool stopChanging = false;
                    On_TaskID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("TaskID");
        			if(!stopChanging)
        			{
        				_taskID = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("TaskID");
        				On_TaskID_Changed(oldValue, _taskID);//\\
        			}
                }
            }
        }
    	public static String TaskID_PropertyName { get { return "TaskID"; } }
        private long _taskID;
        partial void On_TaskID_Changing(long currentValue, ref long newValue, ref bool stopChanging);
        partial void On_TaskID_Changed(long oldValue, long currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int AssetID
        {
            get
            {
                return _assetID;
            }
            set
            {
                if (_assetID != value)
                {
        			int oldValue =  _assetID;
        			bool stopChanging = false;
                    On_AssetID_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("AssetID");
        			if(!stopChanging)
        			{
        				_assetID = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("AssetID");
        				On_AssetID_Changed(oldValue, _assetID);//\\
        			}
                }
            }
        }
    	public static String AssetID_PropertyName { get { return "AssetID"; } }
        private int _assetID;
        partial void On_AssetID_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_AssetID_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
    			string oldValue =  _description;
    			bool stopChanging = false;
                On_Description_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Description");
    			if(!stopChanging)
    			{
    				_description = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Description");
    				On_Description_Changed(oldValue, _description);//\\
    			}
            }
        }
    	public static String Description_PropertyName { get { return "Description"; } }
        private string _description;
        partial void On_Description_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Description_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Completed
        {
            get
            {
                return _completed;
            }
            set
            {
    			Nullable<bool> oldValue =  _completed;
    			bool stopChanging = false;
                On_Completed_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Completed");
    			if(!stopChanging)
    			{
    				_completed = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Completed");
    				On_Completed_Changed(oldValue, _completed);//\\
    			}
            }
        }
    	public static String Completed_PropertyName { get { return "Completed"; } }
        private Nullable<bool> _completed;
        partial void On_Completed_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Completed_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CompletedDate
        {
            get
            {
                return _completedDate;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _completedDate;
    			bool stopChanging = false;
                On_CompletedDate_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CompletedDate");
    			if(!stopChanging)
    			{
    				_completedDate = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CompletedDate");
    				On_CompletedDate_Changed(oldValue, _completedDate);//\\
    			}
            }
        }
    	public static String CompletedDate_PropertyName { get { return "CompletedDate"; } }
        private Nullable<System.DateTime> _completedDate;
        partial void On_CompletedDate_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_CompletedDate_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectEmployeeResourceID
        {
            get
            {
                return _projectEmployeeResourceID;
            }
            set
            {
    			Nullable<int> oldValue =  _projectEmployeeResourceID;
    			bool stopChanging = false;
                On_ProjectEmployeeResourceID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ProjectEmployeeResourceID");
    			if(!stopChanging)
    			{
    				_projectEmployeeResourceID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ProjectEmployeeResourceID");
    				On_ProjectEmployeeResourceID_Changed(oldValue, _projectEmployeeResourceID);//\\
    			}
            }
        }
    	public static String ProjectEmployeeResourceID_PropertyName { get { return "ProjectEmployeeResourceID"; } }
        private Nullable<int> _projectEmployeeResourceID;
        partial void On_ProjectEmployeeResourceID_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ProjectEmployeeResourceID_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Task_Asset_ProjectEmployeeResource", "ProjectEmployeeResource")]
        public ProjectEmployeeResource ProjectEmployeeResource
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectEmployeeResource>("PSC_ERPModel.FK_Task_Asset_ProjectEmployeeResource", "ProjectEmployeeResource").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ProjectEmployeeResource_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectEmployeeResource>("PSC_ERPModel.FK_Task_Asset_ProjectEmployeeResource", "ProjectEmployeeResource").Value = value;
    				On_ProjectEmployeeResource_Changed(this.ProjectEmployeeResource);//\\//
    			}
    	    }
        }
    	public static String ProjectEmployeeResource_ReferencePropertyName { get { return "ProjectEmployeeResource"; } }
    	partial void On_ProjectEmployeeResource_Changing(ref ProjectEmployeeResource newValue, ref bool stopChanging);
    	partial void On_ProjectEmployeeResource_Changed(ProjectEmployeeResource currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectEmployeeResource> ProjectEmployeeResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectEmployeeResource>("PSC_ERPModel.FK_Task_Asset_ProjectEmployeeResource", "ProjectEmployeeResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectEmployeeResource>("PSC_ERPModel.FK_Task_Asset_ProjectEmployeeResource", "ProjectEmployeeResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Task_Asset_Tasks", "Task")]
        public Task Task
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("PSC_ERPModel.FK_Task_Asset_Tasks", "Task").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Task_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("PSC_ERPModel.FK_Task_Asset_Tasks", "Task").Value = value;
    				On_Task_Changed(this.Task);//\\//
    			}
    	    }
        }
    	public static String Task_ReferencePropertyName { get { return "Task"; } }
    	partial void On_Task_Changing(ref Task newValue, ref bool stopChanging);
    	partial void On_Task_Changed(Task currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("PSC_ERPModel.FK_Task_Asset_Tasks", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("PSC_ERPModel.FK_Task_Asset_Tasks", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_Task_Asset_tblTaiSanCoDinhCaBiet", "tblTaiSanCoDinhCaBiet")]
        public tblTaiSanCoDinhCaBiet tblTaiSanCoDinhCaBiet
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblTaiSanCoDinhCaBiet>("PSC_ERPModel.FK_Task_Asset_tblTaiSanCoDinhCaBiet", "tblTaiSanCoDinhCaBiet").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_tblTaiSanCoDinhCaBiet_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblTaiSanCoDinhCaBiet>("PSC_ERPModel.FK_Task_Asset_tblTaiSanCoDinhCaBiet", "tblTaiSanCoDinhCaBiet").Value = value;
    				On_tblTaiSanCoDinhCaBiet_Changed(this.tblTaiSanCoDinhCaBiet);//\\//
    			}
    	    }
        }
    	public static String tblTaiSanCoDinhCaBiet_ReferencePropertyName { get { return "tblTaiSanCoDinhCaBiet"; } }
    	partial void On_tblTaiSanCoDinhCaBiet_Changing(ref tblTaiSanCoDinhCaBiet newValue, ref bool stopChanging);
    	partial void On_tblTaiSanCoDinhCaBiet_Changed(tblTaiSanCoDinhCaBiet currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblTaiSanCoDinhCaBiet> tblTaiSanCoDinhCaBietReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblTaiSanCoDinhCaBiet>("PSC_ERPModel.FK_Task_Asset_tblTaiSanCoDinhCaBiet", "tblTaiSanCoDinhCaBiet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblTaiSanCoDinhCaBiet>("PSC_ERPModel.FK_Task_Asset_tblTaiSanCoDinhCaBiet", "tblTaiSanCoDinhCaBiet", value);
                }
            }
        }

        #endregion

    }
}
