//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-J5VELTF\DELL luc 10:47:31 ngay 24/12/2021
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace PSC_ERP_Business.Main.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PSC_ERPModel", Name="tblChungTu_HoaDon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblChungTu_HoaDon : PSC_ERP_Core.BaseEntityObject//EntityObject
    {
    	public tblChungTu_HoaDon()
    	{
    
    	}
        #region Factory Method
    
        /// <summary>
        /// Create a new tblChungTu_HoaDon object.
        /// </summary>
        /// <param name="maChungTu_ChungTuGoc">Initial value of the MaChungTu_ChungTuGoc property.</param>
        /// <param name="maButToan">Initial value of the MaButToan property.</param>
        /// <param name="maHoaDon">Initial value of the MaHoaDon property.</param>
        /// <param name="soTien">Initial value of the SoTien property.</param>
        public static tblChungTu_HoaDon CreatetblChungTu_HoaDon(long maChungTu_ChungTuGoc, int maButToan, long maHoaDon, decimal soTien)
        {
            tblChungTu_HoaDon tblChungTu_HoaDon = new tblChungTu_HoaDon();
            tblChungTu_HoaDon.MaChungTu_ChungTuGoc = maChungTu_ChungTuGoc;
            tblChungTu_HoaDon.MaButToan = maButToan;
            tblChungTu_HoaDon.MaHoaDon = maHoaDon;
            tblChungTu_HoaDon.SoTien = soTien;
            return tblChungTu_HoaDon;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public long MaChungTu_ChungTuGoc
        {
            get
            {
                return _maChungTu_ChungTuGoc;
            }
            set
            {
                if (_maChungTu_ChungTuGoc != value)
                {
        			long oldValue =  _maChungTu_ChungTuGoc;
        			bool stopChanging = false;
                    On_MaChungTu_ChungTuGoc_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("MaChungTu_ChungTuGoc");
        			if(!stopChanging)
        			{
        				_maChungTu_ChungTuGoc = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("MaChungTu_ChungTuGoc");
        				On_MaChungTu_ChungTuGoc_Changed(oldValue, _maChungTu_ChungTuGoc);//\\
        			}
                }
            }
        }
    	public static String MaChungTu_ChungTuGoc_PropertyName { get { return "MaChungTu_ChungTuGoc"; } }
        private long _maChungTu_ChungTuGoc;
        partial void On_MaChungTu_ChungTuGoc_Changing(long currentValue, ref long newValue, ref bool stopChanging);
        partial void On_MaChungTu_ChungTuGoc_Changed(long oldValue, long currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<long> MaChungTu
        {
            get
            {
                return _maChungTu;
            }
            set
            {
    			Nullable<long> oldValue =  _maChungTu;
    			bool stopChanging = false;
                On_MaChungTu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaChungTu");
    			if(!stopChanging)
    			{
    				_maChungTu = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaChungTu");
    				On_MaChungTu_Changed(oldValue, _maChungTu);//\\
    			}
            }
        }
    	public static String MaChungTu_PropertyName { get { return "MaChungTu"; } }
        private Nullable<long> _maChungTu;
        partial void On_MaChungTu_Changing(Nullable<long> currentValue, ref Nullable<long> newValue, ref bool stopChanging);
        partial void On_MaChungTu_Changed(Nullable<long> oldValue, Nullable<long> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int MaButToan
        {
            get
            {
                return _maButToan;
            }
            set
            {
    			int oldValue =  _maButToan;
    			bool stopChanging = false;
                On_MaButToan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaButToan");
    			if(!stopChanging)
    			{
    				_maButToan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaButToan");
    				On_MaButToan_Changed(oldValue, _maButToan);//\\
    			}
            }
        }
    	public static String MaButToan_PropertyName { get { return "MaButToan"; } }
        private int _maButToan;
        partial void On_MaButToan_Changing(int currentValue, ref int newValue, ref bool stopChanging);
        partial void On_MaButToan_Changed(int oldValue, int currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public long MaHoaDon
        {
            get
            {
                return _maHoaDon;
            }
            set
            {
    			long oldValue =  _maHoaDon;
    			bool stopChanging = false;
                On_MaHoaDon_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaHoaDon");
    			if(!stopChanging)
    			{
    				_maHoaDon = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaHoaDon");
    				On_MaHoaDon_Changed(oldValue, _maHoaDon);//\\
    			}
            }
        }
    	public static String MaHoaDon_PropertyName { get { return "MaHoaDon"; } }
        private long _maHoaDon;
        partial void On_MaHoaDon_Changing(long currentValue, ref long newValue, ref bool stopChanging);
        partial void On_MaHoaDon_Changed(long oldValue, long currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<long> MaPhieuNhapXuat
        {
            get
            {
                return _maPhieuNhapXuat;
            }
            set
            {
    			Nullable<long> oldValue =  _maPhieuNhapXuat;
    			bool stopChanging = false;
                On_MaPhieuNhapXuat_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaPhieuNhapXuat");
    			if(!stopChanging)
    			{
    				_maPhieuNhapXuat = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaPhieuNhapXuat");
    				On_MaPhieuNhapXuat_Changed(oldValue, _maPhieuNhapXuat);//\\
    			}
            }
        }
    	public static String MaPhieuNhapXuat_PropertyName { get { return "MaPhieuNhapXuat"; } }
        private Nullable<long> _maPhieuNhapXuat;
        partial void On_MaPhieuNhapXuat_Changing(Nullable<long> currentValue, ref Nullable<long> newValue, ref bool stopChanging);
        partial void On_MaPhieuNhapXuat_Changed(Nullable<long> oldValue, Nullable<long> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public decimal SoTien
        {
            get
            {
                return _soTien;
            }
            set
            {
    			decimal oldValue =  _soTien;
    			bool stopChanging = false;
                On_SoTien_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoTien");
    			if(!stopChanging)
    			{
    				_soTien = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoTien");
    				On_SoTien_Changed(oldValue, _soTien);//\\
    			}
            }
        }
    	public static String SoTien_PropertyName { get { return "SoTien"; } }
        private decimal _soTien;
        partial void On_SoTien_Changing(decimal currentValue, ref decimal newValue, ref bool stopChanging);
        partial void On_SoTien_Changed(decimal oldValue, decimal currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayLap
        {
            get
            {
                return _ngayLap;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayLap;
    			bool stopChanging = false;
                On_NgayLap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayLap");
    			if(!stopChanging)
    			{
    				_ngayLap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayLap");
    				On_NgayLap_Changed(oldValue, _ngayLap);//\\
    			}
            }
        }
    	public static String NgayLap_PropertyName { get { return "NgayLap"; } }
        private Nullable<System.DateTime> _ngayLap;
        partial void On_NgayLap_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayLap_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NguoiLap
        {
            get
            {
                return _nguoiLap;
            }
            set
            {
    			Nullable<int> oldValue =  _nguoiLap;
    			bool stopChanging = false;
                On_NguoiLap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NguoiLap");
    			if(!stopChanging)
    			{
    				_nguoiLap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NguoiLap");
    				On_NguoiLap_Changed(oldValue, _nguoiLap);//\\
    			}
            }
        }
    	public static String NguoiLap_PropertyName { get { return "NguoiLap"; } }
        private Nullable<int> _nguoiLap;
        partial void On_NguoiLap_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_NguoiLap_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MaBoPhan
        {
            get
            {
                return _maBoPhan;
            }
            set
            {
    			Nullable<int> oldValue =  _maBoPhan;
    			bool stopChanging = false;
                On_MaBoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaBoPhan");
    			if(!stopChanging)
    			{
    				_maBoPhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MaBoPhan");
    				On_MaBoPhan_Changed(oldValue, _maBoPhan);//\\
    			}
            }
        }
    	public static String MaBoPhan_PropertyName { get { return "MaBoPhan"; } }
        private Nullable<int> _maBoPhan;
        partial void On_MaBoPhan_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_MaBoPhan_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenBoPhan
        {
            get
            {
                return _tenBoPhan;
            }
            set
            {
    			string oldValue =  _tenBoPhan;
    			bool stopChanging = false;
                On_TenBoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenBoPhan");
    			if(!stopChanging)
    			{
    				_tenBoPhan = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenBoPhan");
    				On_TenBoPhan_Changed(oldValue, _tenBoPhan);//\\
    			}
            }
        }
    	public static String TenBoPhan_PropertyName { get { return "TenBoPhan"; } }
        private string _tenBoPhan;
        partial void On_TenBoPhan_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenBoPhan_Changed(string oldValue, string currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_tblChungTu_HoaDon_tblHoaDon", "tblHoaDon")]
        public tblHoaDon tblHoaDon
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblHoaDon>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblHoaDon", "tblHoaDon").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_tblHoaDon_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblHoaDon>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblHoaDon", "tblHoaDon").Value = value;
    				On_tblHoaDon_Changed(this.tblHoaDon);//\\//
    			}
    	    }
        }
    	public static String tblHoaDon_ReferencePropertyName { get { return "tblHoaDon"; } }
    	partial void On_tblHoaDon_Changing(ref tblHoaDon newValue, ref bool stopChanging);
    	partial void On_tblHoaDon_Changed(tblHoaDon currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblHoaDon> tblHoaDonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblHoaDon>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblHoaDon", "tblHoaDon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblHoaDon>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblHoaDon", "tblHoaDon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_tblChungTu_HoaDon_tblButToan", "tblButToan")]
        public tblButToan tblButToan
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblButToan>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblButToan", "tblButToan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_tblButToan_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblButToan>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblButToan", "tblButToan").Value = value;
    				On_tblButToan_Changed(this.tblButToan);//\\//
    			}
    	    }
        }
    	public static String tblButToan_ReferencePropertyName { get { return "tblButToan"; } }
    	partial void On_tblButToan_Changing(ref tblButToan newValue, ref bool stopChanging);
    	partial void On_tblButToan_Changed(tblButToan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblButToan> tblButToanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblButToan>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblButToan", "tblButToan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblButToan>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblButToan", "tblButToan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PSC_ERPModel", "FK_tblChungTu_HoaDon_tblChungTu", "tblChungTu")]
        public tblChungTu tblChungTu
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblChungTu>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblChungTu", "tblChungTu").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_tblChungTu_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblChungTu>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblChungTu", "tblChungTu").Value = value;
    				On_tblChungTu_Changed(this.tblChungTu);//\\//
    			}
    	    }
        }
    	public static String tblChungTu_ReferencePropertyName { get { return "tblChungTu"; } }
    	partial void On_tblChungTu_Changing(ref tblChungTu newValue, ref bool stopChanging);
    	partial void On_tblChungTu_Changed(tblChungTu currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblChungTu> tblChungTuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblChungTu>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblChungTu", "tblChungTu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblChungTu>("PSC_ERPModel.FK_tblChungTu_HoaDon_tblChungTu", "tblChungTu", value);
                }
            }
        }

        #endregion

    }
}
