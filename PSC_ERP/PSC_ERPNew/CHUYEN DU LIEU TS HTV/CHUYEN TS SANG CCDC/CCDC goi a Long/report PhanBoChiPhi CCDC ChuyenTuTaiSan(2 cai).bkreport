<?xml version="1.0" standalone="yes"?>
<DocumentElement xmlns="PSC_ERP">
  <ReportTemplate>
    <ID>TongHopPhanBoChiPhiCCDCChuyenTuTaiSan</ID>
    <Data>/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v13.1, Version=13.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReports.v13.1\v4.0_13.1.7.0__b88d1754d700e49a\DevExpress.XtraReports.v13.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <Version>13.1</Version>
///   <Resources>
///     <Resource Name="XtraReportSerialization.Rpt_ReportMau">
/// zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA</Resource>
///   </Resources>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class Rpt_ReportMau : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRTable table1;
        private DevExpress.XtraReports.UI.XRTableRow tableRow1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell7;
        private DevExpress.XtraReports.UI.XRTableCell tableCell2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell15;
        private DevExpress.XtraReports.UI.XRTableCell tableCell16;
        private DevExpress.XtraReports.UI.XRTableCell tableCell18;
        private DevExpress.XtraReports.UI.XRTableCell tableCell21;
        private DevExpress.XtraReports.UI.XRTableCell tableCell24;
        private DevExpress.XtraReports.UI.XRTableCell tableCell27;
        private DevExpress.XtraReports.UI.XRTableCell tableCell35;
        private DevExpress.XtraReports.UI.XRTableCell tableCell5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell32;
        private DevExpress.XtraReports.UI.TopMarginBand TopMargin;
        private DevExpress.XtraReports.UI.BottomMarginBand BottomMargin;
        private DevExpress.XtraReports.UI.ReportHeaderBand ReportHeader;
        private DevExpress.XtraReports.UI.XRTable table7;
        private DevExpress.XtraReports.UI.XRTableRow tableRow13;
        private DevExpress.XtraReports.UI.XRTableCell tableCell65;
        private DevExpress.XtraReports.UI.XRTableRow tableRow11;
        private DevExpress.XtraReports.UI.XRTableCell tableCell37;
        private DevExpress.XtraReports.UI.XRTableRow tableRow15;
        private DevExpress.XtraReports.UI.XRTableCell tableCell71;
        private DevExpress.XtraReports.UI.XRTable table4;
        private DevExpress.XtraReports.UI.XRTableRow tableRow4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell36;
        private DevExpress.XtraReports.UI.XRTable xrTable1;
        private DevExpress.XtraReports.UI.XRTableRow xrTableRow1;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell3;
        private DevExpress.XtraReports.UI.XRTableRow xrTableRow2;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRTable table6;
        private DevExpress.XtraReports.UI.XRTableRow tableRow6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell40;
        private DevExpress.XtraReports.UI.XRTableCell tableCell41;
        private DevExpress.XtraReports.UI.XRTableCell tableCell42;
        private DevExpress.XtraReports.UI.XRTableRow tableRow9;
        private DevExpress.XtraReports.UI.XRTableCell tableCell49;
        private DevExpress.XtraReports.UI.XRTableCell tableCell50;
        private DevExpress.XtraReports.UI.XRTableCell tableCell51;
        private DevExpress.XtraReports.UI.XRTableRow tableRow8;
        private DevExpress.XtraReports.UI.XRTableCell tableCell46;
        private DevExpress.XtraReports.UI.XRTableCell tableCell47;
        private DevExpress.XtraReports.UI.XRTableCell tableCell48;
        private DevExpress.XtraReports.UI.XRTableRow tableRow7;
        private DevExpress.XtraReports.UI.XRTableCell tableCell43;
        private DevExpress.XtraReports.UI.XRTableCell tableCell44;
        private DevExpress.XtraReports.UI.XRTableCell tableCell45;
        private DevExpress.XtraReports.UI.XRTableRow tableRow5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell55;
        private DevExpress.XtraReports.UI.XRTableCell tableCell60;
        private DevExpress.XtraReports.UI.XRTableCell tableCell61;
        private DevExpress.XtraReports.UI.XRTableRow tableRow10;
        private DevExpress.XtraReports.UI.XRTableCell tableCell52;
        private DevExpress.XtraReports.UI.XRTableCell tableCell53;
        private DevExpress.XtraReports.UI.XRTableCell tableCell54;
        private DevExpress.XtraReports.UI.XRTable table5;
        private DevExpress.XtraReports.UI.XRTableRow tableRow12;
        private DevExpress.XtraReports.UI.XRTableCell tableCell38;
        private DevExpress.XtraReports.UI.XRTableCell tableCell39;
        private DevExpress.XtraReports.UI.XRTableCell tableCell56;
        private DevExpress.XtraReports.UI.XRTableCell tableCell57;
        private DevExpress.XtraReports.UI.XRTableCell tableCell58;
        private DevExpress.XtraReports.UI.XRTableCell tableCell59;
        private DevExpress.XtraReports.UI.XRTableCell tableCell62;
        private DevExpress.XtraReports.UI.XRTableCell tableCell63;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRTable table2;
        private DevExpress.XtraReports.UI.XRTableRow tableRow2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell14;
        private DevExpress.XtraReports.UI.XRTableCell tableCell10;
        private DevExpress.XtraReports.UI.XRTableCell tableCell19;
        private DevExpress.XtraReports.UI.XRTableCell tableCell22;
        private DevExpress.XtraReports.UI.XRTableCell tableCell25;
        private DevExpress.XtraReports.UI.XRTableCell tableCell33;
        private DevExpress.XtraReports.UI.XRTableCell tableCell6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell30;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRTable table3;
        private DevExpress.XtraReports.UI.XRTableRow tableRow3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell13;
        private DevExpress.XtraReports.UI.XRTableCell tableCell17;
        private DevExpress.XtraReports.UI.XRTableCell tableCell20;
        private DevExpress.XtraReports.UI.XRTableCell tableCell23;
        private DevExpress.XtraReports.UI.XRTableCell tableCell26;
        private DevExpress.XtraReports.UI.XRTableCell tableCell34;
        private DevExpress.XtraReports.UI.XRTableCell tableCell11;
        private DevExpress.XtraReports.UI.XRTableCell tableCell31;
        private DevExpress.XtraReports.UI.PageFooterBand PageFooter;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private System.Resources.ResourceManager _resources;
        private string _resourceString;
        public Rpt_ReportMau() {
            this._resourceString = DevExpress.XtraReports.Serialization.XRResourceManager.GetResourceFor("XtraReportSerialization.Rpt_ReportMau");
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(this._resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.TopMargin = new DevExpress.XtraReports.UI.TopMarginBand();
            this.BottomMargin = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportHeader = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.PageFooter = new DevExpress.XtraReports.UI.PageFooterBand();
            this.table1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell7 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell15 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell16 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell18 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell21 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell24 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell27 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell35 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell32 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table7 = new DevExpress.XtraReports.UI.XRTable();
            this.table4 = new DevExpress.XtraReports.UI.XRTable();
            this.xrTable1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow13 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow11 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow15 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell65 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell37 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell71 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableRow4 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell36 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.xrTableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.xrTableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table6 = new DevExpress.XtraReports.UI.XRTable();
            this.table5 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow6 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow9 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow8 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow7 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow5 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow10 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell40 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell41 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell42 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell49 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell50 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell51 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell46 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell47 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell48 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell43 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell44 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell45 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell55 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell60 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell61 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell52 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell53 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell54 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableRow12 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell38 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell39 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell56 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell57 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell58 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell59 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell62 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell63 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table2 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell14 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell10 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell19 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell22 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell25 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell33 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell30 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table3 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow3 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell13 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell17 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell20 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell23 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell26 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell34 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell11 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell31 = new DevExpress.XtraReports.UI.XRTableCell();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table7)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table1});
            this.Detail.Expanded = false;
            this.Detail.HeightF = 25F;
            this.Detail.Name = "Detail";
            this.Detail.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.Detail.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.Detail.Visible = false;
            // 
            // TopMargin
            // 
            this.TopMargin.HeightF = 45F;
            this.TopMargin.Name = "TopMargin";
            this.TopMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.TopMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // BottomMargin
            // 
            this.BottomMargin.HeightF = 26.99998F;
            this.BottomMargin.Name = "BottomMargin";
            this.BottomMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.BottomMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // ReportHeader
            // 
            this.ReportHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table7,
                        this.table4,
                        this.xrTable1});
            this.ReportHeader.HeightF = 137.5F;
            this.ReportHeader.Name = "ReportHeader";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table6,
                        this.table5});
            this.ReportFooter.HeightF = 215.625F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table2});
            this.PageHeader.HeightF = 69.79166F;
            this.PageHeader.Name = "PageHeader";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table3});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("TenBoPhan", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 25F;
            this.GroupHeader1.Name = "GroupHeader1";
            // 
            // PageFooter
            // 
            this.PageFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pageInfo1});
            this.PageFooter.HeightF = 23F;
            this.PageFooter.Name = "PageFooter";
            // 
            // table1
            // 
            this.table1.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table1.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.table1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table1.Name = "table1";
            this.table1.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow1});
            this.table1.SizeF = new System.Drawing.SizeF(1108F, 25F);
            this.table1.StylePriority.UseBorders = false;
            this.table1.StylePriority.UseFont = false;
            this.table1.StylePriority.UsePadding = false;
            // 
            // tableRow1
            // 
            this.tableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell7,
                        this.tableCell2,
                        this.tableCell3,
                        this.tableCell15,
                        this.tableCell16,
                        this.tableCell18,
                        this.tableCell21,
                        this.tableCell24,
                        this.tableCell27,
                        this.tableCell35,
                        this.tableCell5,
                        this.tableCell32});
            this.tableRow1.Name = "tableRow1";
            this.tableRow1.Weight = 11.5D;
            // 
            // tableCell7
            // 
            this.tableCell7.Name = "tableCell7";
            summary1.Func = DevExpress.XtraReports.UI.SummaryFunc.RecordNumber;
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell7.Summary = summary1;
            this.tableCell7.Weight = 0.013500970228955316D;
            // 
            // tableCell2
            // 
            this.tableCell2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SBBGNOld")});
            this.tableCell2.Name = "tableCell2";
            this.tableCell2.Text = "68/2012";
            this.tableCell2.Weight = 0.024687495176798583D;
            // 
            // tableCell3
            // 
            this.tableCell3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.MaQuanLy")});
            this.tableCell3.Name = "tableCell3";
            this.tableCell3.Text = "302099907309001";
            this.tableCell3.Weight = 0.03587404879363041D;
            // 
            // tableCell15
            // 
            this.tableCell15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.TenCCDC")});
            this.tableCell15.Name = "tableCell15";
            this.tableCell15.Text = "Remote camera Sony";
            this.tableCell15.Weight = 0.085056181603302D;
            // 
            // tableCell16
            // 
            this.tableCell16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SoSerial")});
            this.tableCell16.Name = "tableCell16";
            this.tableCell16.Text = "tableCell16";
            this.tableCell16.Weight = 0.029128946416254221D;
            // 
            // tableCell18
            // 
            this.tableCell18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SL", "{0:n0}")});
            this.tableCell18.Name = "tableCell18";
            this.tableCell18.StylePriority.UseTextAlignment = false;
            this.tableCell18.Text = "1";
            this.tableCell18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell18.Weight = 0.012675840086844366D;
            // 
            // tableCell21
            // 
            this.tableCell21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.NguyenGia", "{0:n0}")});
            this.tableCell21.Name = "tableCell21";
            this.tableCell21.StylePriority.UseTextAlignment = false;
            this.tableCell21.Text = "5.935.394";
            this.tableCell21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell21.Weight = 0.036669596062936481D;
            // 
            // tableCell24
            // 
            this.tableCell24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeKHTaiSanChuyenSang", "{0:n0}")});
            this.tableCell24.Name = "tableCell24";
            this.tableCell24.StylePriority.UseTextAlignment = false;
            this.tableCell24.Text = "593.538";
            this.tableCell24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell24.Weight = 0.031064301563900016D;
            // 
            // tableCell27
            // 
            this.tableCell27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeHMTaiSanChuyenSang", "{0:n0}")});
            this.tableCell27.Name = "tableCell27";
            this.tableCell27.StylePriority.UseTextAlignment = false;
            this.tableCell27.Text = "0";
            this.tableCell27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell27.Weight = 0.026056133714519328D;
            // 
            // tableCell35
            // 
            this.tableCell35.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLaiTruocPhanBo", "{0:n0}")});
            this.tableCell35.Name = "tableCell35";
            this.tableCell35.StylePriority.UseTextAlignment = false;
            this.tableCell35.Text = "5.341.856";
            this.tableCell35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell35.Weight = 0.035406387985308638D;
            // 
            // tableCell5
            // 
            this.tableCell5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiPhanBo", "{0:n0}")});
            this.tableCell5.Name = "tableCell5";
            this.tableCell5.StylePriority.UseTextAlignment = false;
            this.tableCell5.Text = "tableCell2";
            this.tableCell5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell5.Weight = 0.027773370994966271D;
            // 
            // tableCell32
            // 
            this.tableCell32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLai", "{0:n0}")});
            this.tableCell32.Name = "tableCell32";
            this.tableCell32.StylePriority.UseTextAlignment = false;
            this.tableCell32.Text = "4.451.369";
            this.tableCell32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell32.Weight = 0.031475781127905791D;
            // 
            // table7
            // 
            this.table7.Font = new System.Drawing.Font("Times New Roman", 12F);
            this.table7.LocationFloat = new DevExpress.Utils.PointFloat(200F, 62.5F);
            this.table7.Name = "table7";
            this.table7.Padding = new DevExpress.XtraPrinting.PaddingInfo(17, 0, 0, 0, 100F);
            this.table7.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow13,
                        this.tableRow11,
                        this.tableRow15});
            this.table7.SizeF = new System.Drawing.SizeF(696.6905F, 75F);
            this.table7.StylePriority.UseFont = false;
            this.table7.StylePriority.UsePadding = false;
            this.table7.StylePriority.UseTextAlignment = false;
            this.table7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // table4
            // 
            this.table4.LocationFloat = new DevExpress.Utils.PointFloat(200F, 25F);
            this.table4.Name = "table4";
            this.table4.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow4});
            this.table4.SizeF = new System.Drawing.SizeF(696.6905F, 37.5F);
            this.table4.StylePriority.UseTextAlignment = false;
            this.table4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // xrTable1
            // 
            this.xrTable1.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.xrTable1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.xrTable1.Name = "xrTable1";
            this.xrTable1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.xrTableRow1,
                        this.xrTableRow2});
            this.xrTable1.SizeF = new System.Drawing.SizeF(200F, 50F);
            this.xrTable1.StylePriority.UseFont = false;
            // 
            // tableRow13
            // 
            this.tableRow13.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell65});
            this.tableRow13.Name = "tableRow13";
            this.tableRow13.Weight = 1D;
            // 
            // tableRow11
            // 
            this.tableRow11.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell37});
            this.tableRow11.Name = "tableRow11";
            this.tableRow11.Weight = 1D;
            // 
            // tableRow15
            // 
            this.tableRow15.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell71});
            this.tableRow15.Name = "tableRow15";
            this.tableRow15.Weight = 1D;
            // 
            // tableCell65
            // 
            this.tableCell65.Name = "tableCell65";
            this.tableCell65.StylePriority.UseTextAlignment = false;
            this.tableCell65.Text = "Số chứng từ: [SoChungTuPhanBoChiPhi]";
            this.tableCell65.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.tableCell65.Weight = 3D;
            // 
            // tableCell37
            // 
            this.tableCell37.Name = "tableCell37";
            this.tableCell37.StylePriority.UseTextAlignment = false;
            this.tableCell37.Text = "Ngày chứng từ: [NgayChungTuPhanBoChiPhi!dd/MM/yyyy]";
            this.tableCell37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.tableCell37.Weight = 3D;
            // 
            // tableCell71
            // 
            this.tableCell71.Name = "tableCell71";
            this.tableCell71.StylePriority.UseTextAlignment = false;
            this.tableCell71.Text = "Tỉ lệ phân bổ: [TiLePhanBo_ChungTu!n2] %";
            this.tableCell71.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.tableCell71.Weight = 3D;
            // 
            // tableRow4
            // 
            this.tableRow4.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell36});
            this.tableRow4.Name = "tableRow4";
            this.tableRow4.Weight = 1D;
            // 
            // tableCell36
            // 
            this.tableCell36.Font = new System.Drawing.Font("Times New Roman", 14F, System.Drawing.FontStyle.Bold);
            this.tableCell36.Name = "tableCell36";
            this.tableCell36.StylePriority.UseFont = false;
            this.tableCell36.StylePriority.UseTextAlignment = false;
            this.tableCell36.Text = "TỔNG HỢP PHÂN BỔ CHI PHÍ CÔNG CỤ DỤNG CỤ CHUYỂN TỪ TÀI SẢN NĂM [NgayChungTuPhanBo" +
                "ChiPhi!yyyy]";
            this.tableCell36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.tableCell36.Weight = 4.0210076904296876D;
            // 
            // xrTableRow1
            // 
            this.xrTableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.xrTableCell3});
            this.xrTableRow1.Name = "xrTableRow1";
            this.xrTableRow1.Weight = 1D;
            // 
            // xrTableRow2
            // 
            this.xrTableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.xrTableCell1});
            this.xrTableRow2.Name = "xrTableRow2";
            this.xrTableRow2.Weight = 1D;
            // 
            // xrTableCell3
            // 
            this.xrTableCell3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spd_ReportHeaderAndFooter.TenCongTy")});
            this.xrTableCell3.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.xrTableCell3.Name = "xrTableCell3";
            this.xrTableCell3.StylePriority.UseFont = false;
            this.xrTableCell3.StylePriority.UseTextAlignment = false;
            this.xrTableCell3.Text = "Đài Truyền Hình TPHCM";
            this.xrTableCell3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.xrTableCell3.Weight = 3D;
            // 
            // xrTableCell1
            // 
            this.xrTableCell1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spd_ReportHeaderAndFooter.TenBoPhan")});
            this.xrTableCell1.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrTableCell1.Name = "xrTableCell1";
            this.xrTableCell1.StylePriority.UseFont = false;
            this.xrTableCell1.StylePriority.UseTextAlignment = false;
            this.xrTableCell1.Text = "Ban Tài chính";
            this.xrTableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.xrTableCell1.Weight = 3D;
            // 
            // table6
            // 
            this.table6.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.table6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 36.45833F);
            this.table6.Name = "table6";
            this.table6.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table6.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow6,
                        this.tableRow9,
                        this.tableRow8,
                        this.tableRow7,
                        this.tableRow5,
                        this.tableRow10});
            this.table6.SizeF = new System.Drawing.SizeF(1108F, 150F);
            this.table6.StylePriority.UseFont = false;
            this.table6.StylePriority.UsePadding = false;
            this.table6.StylePriority.UseTextAlignment = false;
            this.table6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // table5
            // 
            this.table5.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table5.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.table5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table5.Name = "table5";
            this.table5.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table5.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow12});
            this.table5.SizeF = new System.Drawing.SizeF(1108F, 25F);
            this.table5.StylePriority.UseBorders = false;
            this.table5.StylePriority.UseFont = false;
            this.table5.StylePriority.UsePadding = false;
            // 
            // tableRow6
            // 
            this.tableRow6.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell40,
                        this.tableCell41,
                        this.tableCell42});
            this.tableRow6.Name = "tableRow6";
            this.tableRow6.Weight = 1D;
            // 
            // tableRow9
            // 
            this.tableRow9.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell49,
                        this.tableCell50,
                        this.tableCell51});
            this.tableRow9.Name = "tableRow9";
            this.tableRow9.Weight = 1D;
            // 
            // tableRow8
            // 
            this.tableRow8.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell46,
                        this.tableCell47,
                        this.tableCell48});
            this.tableRow8.Name = "tableRow8";
            this.tableRow8.Weight = 1D;
            // 
            // tableRow7
            // 
            this.tableRow7.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell43,
                        this.tableCell44,
                        this.tableCell45});
            this.tableRow7.Name = "tableRow7";
            this.tableRow7.Weight = 1D;
            // 
            // tableRow5
            // 
            this.tableRow5.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell55,
                        this.tableCell60,
                        this.tableCell61});
            this.tableRow5.Name = "tableRow5";
            this.tableRow5.Weight = 1D;
            // 
            // tableRow10
            // 
            this.tableRow10.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell52,
                        this.tableCell53,
                        this.tableCell54});
            this.tableRow10.Name = "tableRow10";
            this.tableRow10.Weight = 1D;
            // 
            // tableCell40
            // 
            this.tableCell40.Name = "tableCell40";
            this.tableCell40.Weight = 0.88672357151245529D;
            // 
            // tableCell41
            // 
            this.tableCell41.Name = "tableCell41";
            this.tableCell41.Weight = 1.0992150050211196D;
            // 
            // tableCell42
            // 
            this.tableCell42.Name = "tableCell42";
            this.tableCell42.Text = "Ngày . . . . . tháng . . . . . năm . . . . . ";
            this.tableCell42.Weight = 1.0251816617127776D;
            // 
            // tableCell49
            // 
            this.tableCell49.Name = "tableCell49";
            this.tableCell49.Text = "Kế toán";
            this.tableCell49.Weight = 0.8867233863952978D;
            // 
            // tableCell50
            // 
            this.tableCell50.Name = "tableCell50";
            this.tableCell50.Text = "Trưởng ban tài chính";
            this.tableCell50.Weight = 1.0992151901382774D;
            // 
            // tableCell51
            // 
            this.tableCell51.Name = "tableCell51";
            this.tableCell51.Text = "Thủ trưởng đơn vị";
            this.tableCell51.Weight = 1.0251816617127776D;
            // 
            // tableCell46
            // 
            this.tableCell46.Name = "tableCell46";
            this.tableCell46.Weight = 0.88672357151245529D;
            // 
            // tableCell47
            // 
            this.tableCell47.Name = "tableCell47";
            this.tableCell47.Weight = 1.0992150050211196D;
            // 
            // tableCell48
            // 
            this.tableCell48.Name = "tableCell48";
            this.tableCell48.Weight = 1.0251816617127776D;
            // 
            // tableCell43
            // 
            this.tableCell43.Name = "tableCell43";
            this.tableCell43.Weight = 0.8867233863952978D;
            // 
            // tableCell44
            // 
            this.tableCell44.Name = "tableCell44";
            this.tableCell44.Weight = 1.0992151901382774D;
            // 
            // tableCell45
            // 
            this.tableCell45.Name = "tableCell45";
            this.tableCell45.Weight = 1.0251816617127776D;
            // 
            // tableCell55
            // 
            this.tableCell55.Name = "tableCell55";
            this.tableCell55.Weight = 0.8867233863952978D;
            // 
            // tableCell60
            // 
            this.tableCell60.Name = "tableCell60";
            this.tableCell60.Weight = 1.0992151901382774D;
            // 
            // tableCell61
            // 
            this.tableCell61.Name = "tableCell61";
            this.tableCell61.Weight = 1.0251816617127776D;
            // 
            // tableCell52
            // 
            this.tableCell52.Name = "tableCell52";
            this.tableCell52.Weight = 0.88672357151245529D;
            // 
            // tableCell53
            // 
            this.tableCell53.Name = "tableCell53";
            this.tableCell53.Weight = 1.0992150050211196D;
            // 
            // tableCell54
            // 
            this.tableCell54.Name = "tableCell54";
            this.tableCell54.Weight = 1.0251816617127776D;
            // 
            // tableRow12
            // 
            this.tableRow12.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell38,
                        this.tableCell39,
                        this.tableCell56,
                        this.tableCell57,
                        this.tableCell58,
                        this.tableCell59,
                        this.tableCell62,
                        this.tableCell63});
            this.tableRow12.Name = "tableRow12";
            this.tableRow12.Weight = 11.5D;
            // 
            // tableCell38
            // 
            this.tableCell38.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell38.Name = "tableCell38";
            this.tableCell38.StylePriority.UseFont = false;
            this.tableCell38.StylePriority.UseTextAlignment = false;
            this.tableCell38.Text = "Tổng cộng";
            this.tableCell38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell38.Weight = 0.13043313102763809D;
            // 
            // tableCell39
            // 
            this.tableCell39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SL")});
            this.tableCell39.Name = "tableCell39";
            this.tableCell39.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:n0}";
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell39.Summary = summary2;
            this.tableCell39.Text = "tableCell39";
            this.tableCell39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell39.Weight = 0.017116621013855082D;
            // 
            // tableCell56
            // 
            this.tableCell56.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.NguyenGia")});
            this.tableCell56.Name = "tableCell56";
            this.tableCell56.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:n0}";
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell56.Summary = summary3;
            this.tableCell56.Text = "tableCell56";
            this.tableCell56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell56.Weight = 0.038765343122189669D;
            // 
            // tableCell57
            // 
            this.tableCell57.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeKHTaiSanChuyenSang")});
            this.tableCell57.Name = "tableCell57";
            this.tableCell57.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:n0}";
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell57.Summary = summary4;
            this.tableCell57.Text = "tableCell57";
            this.tableCell57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell57.Weight = 0.034003425674426394D;
            // 
            // tableCell58
            // 
            this.tableCell58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeHMTaiSanChuyenSang")});
            this.tableCell58.Name = "tableCell58";
            this.tableCell58.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:n0}";
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell58.Summary = summary5;
            this.tableCell58.Text = "tableCell58";
            this.tableCell58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell58.Weight = 0.036334708261127752D;
            // 
            // tableCell59
            // 
            this.tableCell59.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLaiTruocPhanBo")});
            this.tableCell59.Name = "tableCell59";
            this.tableCell59.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:n0}";
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell59.Summary = summary6;
            this.tableCell59.Text = "tableCell59";
            this.tableCell59.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell59.Weight = 0.035547649847891979D;
            // 
            // tableCell62
            // 
            this.tableCell62.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiPhanBo")});
            this.tableCell62.Name = "tableCell62";
            this.tableCell62.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:n0}";
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell62.Summary = summary7;
            this.tableCell62.Text = "tableCell62";
            this.tableCell62.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell62.Weight = 0.034240246914783778D;
            // 
            // tableCell63
            // 
            this.tableCell63.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLai")});
            this.tableCell63.Name = "tableCell63";
            this.tableCell63.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:n0}";
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell63.Summary = summary8;
            this.tableCell63.Text = "tableCell63";
            this.tableCell63.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell63.Weight = 0.034618270798227449D;
            // 
            // table2
            // 
            this.table2.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table2.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.table2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table2.Name = "table2";
            this.table2.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow2});
            this.table2.SizeF = new System.Drawing.SizeF(1108F, 69.79166F);
            this.table2.StylePriority.UseBorders = false;
            this.table2.StylePriority.UseFont = false;
            this.table2.StylePriority.UseTextAlignment = false;
            this.table2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // tableRow2
            // 
            this.tableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell4,
                        this.tableCell14,
                        this.tableCell10,
                        this.tableCell19,
                        this.tableCell22,
                        this.tableCell25,
                        this.tableCell33,
                        this.tableCell6,
                        this.tableCell30});
            this.tableRow2.Name = "tableRow2";
            this.tableRow2.Weight = 1D;
            // 
            // tableCell4
            // 
            this.tableCell4.Name = "tableCell4";
            this.tableCell4.Text = "STT";
            this.tableCell4.Weight = 0.10510504645270269D;
            // 
            // tableCell14
            // 
            this.tableCell14.Name = "tableCell14";
            this.tableCell14.Text = "Tên bộ phận";
            this.tableCell14.Weight = 0.98993314407928845D;
            // 
            // tableCell10
            // 
            this.tableCell10.Name = "tableCell10";
            this.tableCell10.Text = "SL";
            this.tableCell10.Weight = 0.14370079248407131D;
            // 
            // tableCell19
            // 
            this.tableCell19.Name = "tableCell19";
            this.tableCell19.Text = "Nguyên giá";
            this.tableCell19.Weight = 0.32545038097535156D;
            // 
            // tableCell22
            // 
            this.tableCell22.Name = "tableCell22";
            this.tableCell22.Text = "Lũy kế khấu hao";
            this.tableCell22.Weight = 0.28547264089008983D;
            // 
            // tableCell25
            // 
            this.tableCell25.Name = "tableCell25";
            this.tableCell25.Text = "Lũy kế hao mòn";
            this.tableCell25.Weight = 0.30504401169751161D;
            // 
            // tableCell33
            // 
            this.tableCell33.Name = "tableCell33";
            this.tableCell33.Text = "Chi phí còn lại trước phân bổ";
            this.tableCell33.Weight = 0.29843684989908253D;
            // 
            // tableCell6
            // 
            this.tableCell6.Name = "tableCell6";
            this.tableCell6.Text = "Chi phí phân bổ";
            this.tableCell6.Weight = 0.28746037427823667D;
            // 
            // tableCell30
            // 
            this.tableCell30.Name = "tableCell30";
            this.tableCell30.Text = "Chi phí còn lại sau phân bổ";
            this.tableCell30.Weight = 0.29063479415357624D;
            // 
            // table3
            // 
            this.table3.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table3.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.table3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table3.Name = "table3";
            this.table3.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table3.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow3});
            this.table3.SizeF = new System.Drawing.SizeF(1108F, 25F);
            this.table3.StylePriority.UseBorders = false;
            this.table3.StylePriority.UseFont = false;
            this.table3.StylePriority.UsePadding = false;
            // 
            // tableRow3
            // 
            this.tableRow3.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell1,
                        this.tableCell13,
                        this.tableCell17,
                        this.tableCell20,
                        this.tableCell23,
                        this.tableCell26,
                        this.tableCell34,
                        this.tableCell11,
                        this.tableCell31});
            this.tableRow3.Name = "tableRow3";
            this.tableRow3.Weight = 11.5D;
            // 
            // tableCell1
            // 
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.Scripts.OnBeforePrint = "tableCell1_BeforePrint";
            this.tableCell1.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:n0}";
            summary9.Func = DevExpress.XtraReports.UI.SummaryFunc.RecordNumber;
            this.tableCell1.Summary = summary9;
            this.tableCell1.Text = "32";
            this.tableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell1.Weight = 0.012519358930054847D;
            // 
            // tableCell13
            // 
            this.tableCell13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.TenBoPhan")});
            this.tableCell13.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.tableCell13.Name = "tableCell13";
            this.tableCell13.StylePriority.UseFont = false;
            this.tableCell13.Text = "tableCell13";
            this.tableCell13.Weight = 0.11791377074380546D;
            // 
            // tableCell17
            // 
            this.tableCell17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SL")});
            this.tableCell17.Name = "tableCell17";
            this.tableCell17.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:n0}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell17.Summary = summary10;
            this.tableCell17.Text = "tableCell17";
            this.tableCell17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell17.Weight = 0.017116601776877294D;
            // 
            // tableCell20
            // 
            this.tableCell20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.NguyenGia")});
            this.tableCell20.Name = "tableCell20";
            this.tableCell20.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:n0}";
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell20.Summary = summary11;
            this.tableCell20.Text = "tableCell20";
            this.tableCell20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell20.Weight = 0.038765340111410168D;
            // 
            // tableCell23
            // 
            this.tableCell23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeKHTaiSanChuyenSang")});
            this.tableCell23.Name = "tableCell23";
            this.tableCell23.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:n0}";
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell23.Summary = summary12;
            this.tableCell23.Text = "tableCell23";
            this.tableCell23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell23.Weight = 0.034003442504899263D;
            // 
            // tableCell26
            // 
            this.tableCell26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeHMTaiSanChuyenSang")});
            this.tableCell26.Name = "tableCell26";
            this.tableCell26.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:n0}";
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell26.Summary = summary13;
            this.tableCell26.Text = "tableCell26";
            this.tableCell26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell26.Weight = 0.036334662169136417D;
            // 
            // tableCell34
            // 
            this.tableCell34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLaiTruocPhanBo")});
            this.tableCell34.Name = "tableCell34";
            this.tableCell34.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:n0}";
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell34.Summary = summary14;
            this.tableCell34.Text = "tableCell34";
            this.tableCell34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell34.Weight = 0.035547666951826817D;
            // 
            // tableCell11
            // 
            this.tableCell11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiPhanBo")});
            this.tableCell11.Name = "tableCell11";
            this.tableCell11.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:n0}";
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell11.Summary = summary15;
            this.tableCell11.Text = "tableCell11";
            this.tableCell11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell11.Weight = 0.034240221118262741D;
            // 
            // tableCell31
            // 
            this.tableCell31.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLai")});
            this.tableCell31.Name = "tableCell31";
            this.tableCell31.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:n0}";
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell31.Summary = summary16;
            this.tableCell31.Text = "tableCell31";
            this.tableCell31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell31.Weight = 0.034618332353867229D;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.pageInfo1.Format = "Trang {0}/{1}";
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(326.287F, 0F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.SizeF = new System.Drawing.SizeF(401.557F, 23F);
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // Rpt_ReportMau
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.TopMargin,
                        this.BottomMargin,
                        this.ReportHeader,
                        this.ReportFooter,
                        this.PageHeader,
                        this.GroupHeader1,
                        this.PageFooter});
            this.DataMember = "MainData";
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(27, 24, 45, 27);
            this.Name = "Rpt_ReportMau";
            this.PageHeight = 827;
            this.PageWidth = 1169;
            this.PaperKind = System.Drawing.Printing.PaperKind.A4;
            this.ScriptsSource = "int count=0;\r\nprivate void tableCell1_BeforePrint(object sender, System.Drawing.P" +
                "rinting.PrintEventArgs e) {\r\n\tcount +=1;\r\n\ttableCell1.Text = count.ToString();\r\n" +
                "}\r\n";
            this.Version = "13.1";
            ((System.ComponentModel.ISupportInitialize)(this.table1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table7)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
</Data>
    <TenBaoCao>Tổng hợp phân bổ chi phí CCDC chuyển từ tài sản</TenBaoCao>
    <TenPhuongThuc>TongHopPhanBoChiPhiCCDCChuyenTuTaiSan</TenPhuongThuc>
    <ThuMuc>3</ThuMuc>
    <DenNgay>2014-03-24T00:00:00+07:00</DenNgay>
    <UserID>39</UserID>
    <SoTTSapXep>11</SoTTSapXep>
  </ReportTemplate>
  <ReportTemplate>
    <ID>ChiTietPhanBoChiPhiCCDCChuyenTuTaiSan</ID>
    <Data>/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v13.1, Version=13.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReports.v13.1\v4.0_13.1.7.0__b88d1754d700e49a\DevExpress.XtraReports.v13.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <Version>13.1</Version>
///   <Resources>
///     <Resource Name="XtraReportSerialization.Rpt_ReportMau">
/// zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA</Resource>
///   </Resources>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class Rpt_ReportMau : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRTable table1;
        private DevExpress.XtraReports.UI.XRTableRow tableRow1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell7;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell15;
        private DevExpress.XtraReports.UI.XRTableCell tableCell16;
        private DevExpress.XtraReports.UI.XRTableCell tableCell18;
        private DevExpress.XtraReports.UI.XRTableCell tableCell21;
        private DevExpress.XtraReports.UI.XRTableCell tableCell24;
        private DevExpress.XtraReports.UI.XRTableCell tableCell27;
        private DevExpress.XtraReports.UI.XRTableCell tableCell35;
        private DevExpress.XtraReports.UI.XRTableCell tableCell2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell32;
        private DevExpress.XtraReports.UI.TopMarginBand TopMargin;
        private DevExpress.XtraReports.UI.BottomMarginBand BottomMargin;
        private DevExpress.XtraReports.UI.ReportHeaderBand ReportHeader;
        private DevExpress.XtraReports.UI.XRTable table7;
        private DevExpress.XtraReports.UI.XRTableRow tableRow13;
        private DevExpress.XtraReports.UI.XRTableCell tableCell65;
        private DevExpress.XtraReports.UI.XRTableRow tableRow11;
        private DevExpress.XtraReports.UI.XRTableCell tableCell37;
        private DevExpress.XtraReports.UI.XRTableRow tableRow15;
        private DevExpress.XtraReports.UI.XRTableCell tableCell71;
        private DevExpress.XtraReports.UI.XRTable table4;
        private DevExpress.XtraReports.UI.XRTableRow tableRow4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell36;
        private DevExpress.XtraReports.UI.XRTable xrTable1;
        private DevExpress.XtraReports.UI.XRTableRow xrTableRow1;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell3;
        private DevExpress.XtraReports.UI.XRTableRow xrTableRow2;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRTable table5;
        private DevExpress.XtraReports.UI.XRTableRow tableRow12;
        private DevExpress.XtraReports.UI.XRTableCell tableCell38;
        private DevExpress.XtraReports.UI.XRTableCell tableCell39;
        private DevExpress.XtraReports.UI.XRTableCell tableCell56;
        private DevExpress.XtraReports.UI.XRTableCell tableCell57;
        private DevExpress.XtraReports.UI.XRTableCell tableCell58;
        private DevExpress.XtraReports.UI.XRTableCell tableCell59;
        private DevExpress.XtraReports.UI.XRTableCell tableCell62;
        private DevExpress.XtraReports.UI.XRTableCell tableCell63;
        private DevExpress.XtraReports.UI.XRTable table6;
        private DevExpress.XtraReports.UI.XRTableRow tableRow6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell40;
        private DevExpress.XtraReports.UI.XRTableCell tableCell41;
        private DevExpress.XtraReports.UI.XRTableCell tableCell42;
        private DevExpress.XtraReports.UI.XRTableRow tableRow9;
        private DevExpress.XtraReports.UI.XRTableCell tableCell49;
        private DevExpress.XtraReports.UI.XRTableCell tableCell50;
        private DevExpress.XtraReports.UI.XRTableCell tableCell51;
        private DevExpress.XtraReports.UI.XRTableRow tableRow8;
        private DevExpress.XtraReports.UI.XRTableCell tableCell46;
        private DevExpress.XtraReports.UI.XRTableCell tableCell47;
        private DevExpress.XtraReports.UI.XRTableCell tableCell48;
        private DevExpress.XtraReports.UI.XRTableRow tableRow7;
        private DevExpress.XtraReports.UI.XRTableCell tableCell43;
        private DevExpress.XtraReports.UI.XRTableCell tableCell44;
        private DevExpress.XtraReports.UI.XRTableCell tableCell45;
        private DevExpress.XtraReports.UI.XRTableRow tableRow5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell55;
        private DevExpress.XtraReports.UI.XRTableCell tableCell60;
        private DevExpress.XtraReports.UI.XRTableCell tableCell61;
        private DevExpress.XtraReports.UI.XRTableRow tableRow10;
        private DevExpress.XtraReports.UI.XRTableCell tableCell52;
        private DevExpress.XtraReports.UI.XRTableCell tableCell53;
        private DevExpress.XtraReports.UI.XRTableCell tableCell54;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRTable table2;
        private DevExpress.XtraReports.UI.XRTableRow tableRow2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell8;
        private DevExpress.XtraReports.UI.XRTableCell tableCell14;
        private DevExpress.XtraReports.UI.XRTableCell tableCell9;
        private DevExpress.XtraReports.UI.XRTableCell tableCell10;
        private DevExpress.XtraReports.UI.XRTableCell tableCell19;
        private DevExpress.XtraReports.UI.XRTableCell tableCell22;
        private DevExpress.XtraReports.UI.XRTableCell tableCell25;
        private DevExpress.XtraReports.UI.XRTableCell tableCell33;
        private DevExpress.XtraReports.UI.XRTableCell tableCell6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell30;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRTable table3;
        private DevExpress.XtraReports.UI.XRTableRow tableRow3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell13;
        private DevExpress.XtraReports.UI.XRTableCell tableCell17;
        private DevExpress.XtraReports.UI.XRTableCell tableCell20;
        private DevExpress.XtraReports.UI.XRTableCell tableCell23;
        private DevExpress.XtraReports.UI.XRTableCell tableCell26;
        private DevExpress.XtraReports.UI.XRTableCell tableCell34;
        private DevExpress.XtraReports.UI.XRTableCell tableCell11;
        private DevExpress.XtraReports.UI.XRTableCell tableCell31;
        private DevExpress.XtraReports.UI.PageFooterBand PageFooter;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private System.Resources.ResourceManager _resources;
        private string _resourceString;
        public Rpt_ReportMau() {
            this._resourceString = DevExpress.XtraReports.Serialization.XRResourceManager.GetResourceFor("XtraReportSerialization.Rpt_ReportMau");
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(this._resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.TopMargin = new DevExpress.XtraReports.UI.TopMarginBand();
            this.BottomMargin = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportHeader = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.PageFooter = new DevExpress.XtraReports.UI.PageFooterBand();
            this.table1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell7 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell15 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell16 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell18 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell21 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell24 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell27 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell35 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell32 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table7 = new DevExpress.XtraReports.UI.XRTable();
            this.table4 = new DevExpress.XtraReports.UI.XRTable();
            this.xrTable1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow13 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow11 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow15 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell65 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell37 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell71 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableRow4 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell36 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.xrTableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.xrTableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table5 = new DevExpress.XtraReports.UI.XRTable();
            this.table6 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow12 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell38 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell39 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell56 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell57 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell58 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell59 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell62 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell63 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableRow6 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow9 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow8 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow7 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow5 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow10 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell40 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell41 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell42 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell49 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell50 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell51 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell46 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell47 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell48 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell43 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell44 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell45 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell55 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell60 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell61 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell52 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell53 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell54 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table2 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell8 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell14 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell9 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell10 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell19 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell22 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell25 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell33 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell30 = new DevExpress.XtraReports.UI.XRTableCell();
            this.table3 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow3 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell13 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell17 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell20 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell23 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell26 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell34 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell11 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell31 = new DevExpress.XtraReports.UI.XRTableCell();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table7)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table1});
            this.Detail.HeightF = 25F;
            this.Detail.Name = "Detail";
            this.Detail.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.Detail.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // TopMargin
            // 
            this.TopMargin.HeightF = 47F;
            this.TopMargin.Name = "TopMargin";
            this.TopMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.TopMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // BottomMargin
            // 
            this.BottomMargin.HeightF = 26.04167F;
            this.BottomMargin.Name = "BottomMargin";
            this.BottomMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.BottomMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // ReportHeader
            // 
            this.ReportHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table7,
                        this.table4,
                        this.xrTable1});
            this.ReportHeader.HeightF = 137.5F;
            this.ReportHeader.Name = "ReportHeader";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table5,
                        this.table6});
            this.ReportFooter.HeightF = 189.5833F;
            this.ReportFooter.KeepTogether = true;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table2});
            this.PageHeader.HeightF = 69.79166F;
            this.PageHeader.Name = "PageHeader";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table3});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("TenBoPhan", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 25F;
            this.GroupHeader1.Name = "GroupHeader1";
            // 
            // PageFooter
            // 
            this.PageFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pageInfo1});
            this.PageFooter.HeightF = 23F;
            this.PageFooter.Name = "PageFooter";
            // 
            // table1
            // 
            this.table1.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table1.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.table1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table1.Name = "table1";
            this.table1.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow1});
            this.table1.SizeF = new System.Drawing.SizeF(1100F, 25F);
            this.table1.StylePriority.UseBorders = false;
            this.table1.StylePriority.UseFont = false;
            this.table1.StylePriority.UsePadding = false;
            // 
            // tableRow1
            // 
            this.tableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell7,
                        this.tableCell1,
                        this.tableCell3,
                        this.tableCell15,
                        this.tableCell16,
                        this.tableCell18,
                        this.tableCell21,
                        this.tableCell24,
                        this.tableCell27,
                        this.tableCell35,
                        this.tableCell2,
                        this.tableCell32});
            this.tableRow1.Name = "tableRow1";
            this.tableRow1.Weight = 11.5D;
            // 
            // tableCell7
            // 
            this.tableCell7.Name = "tableCell7";
            summary1.Func = DevExpress.XtraReports.UI.SummaryFunc.RecordNumber;
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell7.Summary = summary1;
            this.tableCell7.Weight = 0.013500970228955316D;
            // 
            // tableCell1
            // 
            this.tableCell1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SBBGNOld")});
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.Text = "33/2011";
            this.tableCell1.Weight = 0.024687495176798583D;
            // 
            // tableCell3
            // 
            this.tableCell3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.MaQuanLy")});
            this.tableCell3.Name = "tableCell3";
            this.tableCell3.Text = "3010103060001";
            this.tableCell3.Weight = 0.03587404879363041D;
            // 
            // tableCell15
            // 
            this.tableCell15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.TenCCDC")});
            this.tableCell15.Name = "tableCell15";
            this.tableCell15.Text = "Máy tính xách tay Sony Vaio";
            this.tableCell15.Weight = 0.085056181603302D;
            // 
            // tableCell16
            // 
            this.tableCell16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SoSerial")});
            this.tableCell16.Name = "tableCell16";
            this.tableCell16.Text = "7006715";
            this.tableCell16.Weight = 0.02709836875287815D;
            // 
            // tableCell18
            // 
            this.tableCell18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SL", "{0:n0}")});
            this.tableCell18.Name = "tableCell18";
            this.tableCell18.StylePriority.UseTextAlignment = false;
            this.tableCell18.Text = "1";
            this.tableCell18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell18.Weight = 0.014706417750220437D;
            // 
            // tableCell21
            // 
            this.tableCell21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.NguyenGia", "{0:n0}")});
            this.tableCell21.Name = "tableCell21";
            this.tableCell21.StylePriority.UseTextAlignment = false;
            this.tableCell21.Text = "26.998.668";
            this.tableCell21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell21.Weight = 0.036669596062936481D;
            // 
            // tableCell24
            // 
            this.tableCell24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeKHTaiSanChuyenSang", "{0:n0}")});
            this.tableCell24.Name = "tableCell24";
            this.tableCell24.StylePriority.UseTextAlignment = false;
            this.tableCell24.Text = "8.999.560";
            this.tableCell24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell24.Weight = 0.031064301563900016D;
            // 
            // tableCell27
            // 
            this.tableCell27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeHMTaiSanChuyenSang", "{0:n0}")});
            this.tableCell27.Name = "tableCell27";
            this.tableCell27.StylePriority.UseTextAlignment = false;
            this.tableCell27.Text = "0";
            this.tableCell27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell27.Weight = 0.026056133714519328D;
            // 
            // tableCell35
            // 
            this.tableCell35.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLaiTruocPhanBo", "{0:n0}")});
            this.tableCell35.Name = "tableCell35";
            this.tableCell35.StylePriority.UseTextAlignment = false;
            this.tableCell35.Text = "17.999.108";
            this.tableCell35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell35.Weight = 0.035406387985308638D;
            // 
            // tableCell2
            // 
            this.tableCell2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiPhanBo", "{0:n0}")});
            this.tableCell2.Name = "tableCell2";
            this.tableCell2.StylePriority.UseTextAlignment = false;
            this.tableCell2.Text = "3.000.451";
            this.tableCell2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell2.Weight = 0.027773370994966271D;
            // 
            // tableCell32
            // 
            this.tableCell32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLai", "{0:n0}")});
            this.tableCell32.Name = "tableCell32";
            this.tableCell32.StylePriority.UseTextAlignment = false;
            this.tableCell32.Text = "14.998.657";
            this.tableCell32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell32.Weight = 0.031475781127905791D;
            // 
            // table7
            // 
            this.table7.LocationFloat = new DevExpress.Utils.PointFloat(200F, 62.5F);
            this.table7.Name = "table7";
            this.table7.Padding = new DevExpress.XtraPrinting.PaddingInfo(15, 0, 0, 0, 100F);
            this.table7.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow13,
                        this.tableRow11,
                        this.tableRow15});
            this.table7.SizeF = new System.Drawing.SizeF(691.463F, 75F);
            this.table7.StylePriority.UsePadding = false;
            this.table7.StylePriority.UseTextAlignment = false;
            this.table7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // table4
            // 
            this.table4.LocationFloat = new DevExpress.Utils.PointFloat(200F, 25F);
            this.table4.Name = "table4";
            this.table4.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow4});
            this.table4.SizeF = new System.Drawing.SizeF(691.4629F, 37.5F);
            this.table4.StylePriority.UseTextAlignment = false;
            this.table4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // xrTable1
            // 
            this.xrTable1.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.xrTable1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.xrTable1.Name = "xrTable1";
            this.xrTable1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.xrTableRow1,
                        this.xrTableRow2});
            this.xrTable1.SizeF = new System.Drawing.SizeF(200F, 50F);
            this.xrTable1.StylePriority.UseFont = false;
            // 
            // tableRow13
            // 
            this.tableRow13.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell65});
            this.tableRow13.Name = "tableRow13";
            this.tableRow13.Weight = 1D;
            // 
            // tableRow11
            // 
            this.tableRow11.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell37});
            this.tableRow11.Name = "tableRow11";
            this.tableRow11.Weight = 1D;
            // 
            // tableRow15
            // 
            this.tableRow15.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell71});
            this.tableRow15.Name = "tableRow15";
            this.tableRow15.Weight = 1D;
            // 
            // tableCell65
            // 
            this.tableCell65.Name = "tableCell65";
            this.tableCell65.StylePriority.UseTextAlignment = false;
            this.tableCell65.Text = "Số chứng từ: abc";
            this.tableCell65.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.tableCell65.Weight = 3D;
            // 
            // tableCell37
            // 
            this.tableCell37.Name = "tableCell37";
            this.tableCell37.StylePriority.UseTextAlignment = false;
            this.tableCell37.Text = "Ngày chứng từ: 31/12/2013";
            this.tableCell37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.tableCell37.Weight = 3D;
            // 
            // tableCell71
            // 
            this.tableCell71.Name = "tableCell71";
            this.tableCell71.StylePriority.UseTextAlignment = false;
            this.tableCell71.Text = "Tỉ lệ phân bổ: 16,67 %";
            this.tableCell71.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.tableCell71.Weight = 3D;
            // 
            // tableRow4
            // 
            this.tableRow4.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell36});
            this.tableRow4.Name = "tableRow4";
            this.tableRow4.Weight = 1D;
            // 
            // tableCell36
            // 
            this.tableCell36.Font = new System.Drawing.Font("Times New Roman", 14F, System.Drawing.FontStyle.Bold);
            this.tableCell36.Name = "tableCell36";
            this.tableCell36.StylePriority.UseFont = false;
            this.tableCell36.StylePriority.UseTextAlignment = false;
            this.tableCell36.Text = "PHÂN BỔ CHI PHÍ CÔNG CỤ DỤNG CỤ CHUYỂN TỪ TÀI SẢN NĂM 2013";
            this.tableCell36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.tableCell36.Weight = 4.0210076904296876D;
            // 
            // xrTableRow1
            // 
            this.xrTableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.xrTableCell3});
            this.xrTableRow1.Name = "xrTableRow1";
            this.xrTableRow1.Weight = 1D;
            // 
            // xrTableRow2
            // 
            this.xrTableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.xrTableCell1});
            this.xrTableRow2.Name = "xrTableRow2";
            this.xrTableRow2.Weight = 1D;
            // 
            // xrTableCell3
            // 
            this.xrTableCell3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spd_ReportHeaderAndFooter.TenCongTy")});
            this.xrTableCell3.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.xrTableCell3.Name = "xrTableCell3";
            this.xrTableCell3.StylePriority.UseFont = false;
            this.xrTableCell3.StylePriority.UseTextAlignment = false;
            this.xrTableCell3.Text = "Đài Truyền Hình TPHCM";
            this.xrTableCell3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.xrTableCell3.Weight = 3D;
            // 
            // xrTableCell1
            // 
            this.xrTableCell1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spd_ReportHeaderAndFooter.TenBoPhan")});
            this.xrTableCell1.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrTableCell1.Name = "xrTableCell1";
            this.xrTableCell1.StylePriority.UseFont = false;
            this.xrTableCell1.StylePriority.UseTextAlignment = false;
            this.xrTableCell1.Text = "Ban Tài chính";
            this.xrTableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.xrTableCell1.Weight = 3D;
            // 
            // table5
            // 
            this.table5.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table5.Font = new System.Drawing.Font("Times New Roman", 8F, System.Drawing.FontStyle.Bold);
            this.table5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table5.Name = "table5";
            this.table5.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table5.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow12});
            this.table5.SizeF = new System.Drawing.SizeF(1100F, 25F);
            this.table5.StylePriority.UseBorders = false;
            this.table5.StylePriority.UseFont = false;
            this.table5.StylePriority.UsePadding = false;
            // 
            // table6
            // 
            this.table6.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.table6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 39.58333F);
            this.table6.Name = "table6";
            this.table6.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table6.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow6,
                        this.tableRow9,
                        this.tableRow8,
                        this.tableRow7,
                        this.tableRow5,
                        this.tableRow10});
            this.table6.SizeF = new System.Drawing.SizeF(1100F, 150F);
            this.table6.StylePriority.UseFont = false;
            this.table6.StylePriority.UsePadding = false;
            this.table6.StylePriority.UseTextAlignment = false;
            this.table6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // tableRow12
            // 
            this.tableRow12.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell38,
                        this.tableCell39,
                        this.tableCell56,
                        this.tableCell57,
                        this.tableCell58,
                        this.tableCell59,
                        this.tableCell62,
                        this.tableCell63});
            this.tableRow12.Name = "tableRow12";
            this.tableRow12.Weight = 11.5D;
            // 
            // tableCell38
            // 
            this.tableCell38.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell38.Name = "tableCell38";
            this.tableCell38.StylePriority.UseFont = false;
            this.tableCell38.StylePriority.UseTextAlignment = false;
            this.tableCell38.Text = "Tổng cộng";
            this.tableCell38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell38.Weight = 0.17143112681128767D;
            // 
            // tableCell39
            // 
            this.tableCell39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SL")});
            this.tableCell39.Name = "tableCell39";
            this.tableCell39.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:n0}";
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell39.Summary = summary2;
            this.tableCell39.Text = "tableCell39";
            this.tableCell39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell39.Weight = 0.0135387041352012D;
            // 
            // tableCell56
            // 
            this.tableCell56.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.NguyenGia")});
            this.tableCell56.Name = "tableCell56";
            this.tableCell56.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:n0}";
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell56.Summary = summary3;
            this.tableCell56.Text = "tableCell56";
            this.tableCell56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell56.Weight = 0.033757988864725294D;
            // 
            // tableCell57
            // 
            this.tableCell57.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeKHTaiSanChuyenSang")});
            this.tableCell57.Name = "tableCell57";
            this.tableCell57.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:n0}";
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell57.Summary = summary4;
            this.tableCell57.Text = "tableCell57";
            this.tableCell57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell57.Weight = 0.028597743890502229D;
            // 
            // tableCell58
            // 
            this.tableCell58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeHMTaiSanChuyenSang")});
            this.tableCell58.Name = "tableCell58";
            this.tableCell58.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:n0}";
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell58.Summary = summary5;
            this.tableCell58.Text = "tableCell58";
            this.tableCell58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell58.Weight = 0.023987211287021654D;
            // 
            // tableCell59
            // 
            this.tableCell59.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLaiTruocPhanBo")});
            this.tableCell59.Name = "tableCell59";
            this.tableCell59.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:n0}";
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell59.Summary = summary6;
            this.tableCell59.Text = "tableCell59";
            this.tableCell59.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell59.Weight = 0.032595061788504784D;
            // 
            // tableCell62
            // 
            this.tableCell62.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiPhanBo")});
            this.tableCell62.Name = "tableCell62";
            this.tableCell62.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:n0}";
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell62.Summary = summary7;
            this.tableCell62.Text = "tableCell62";
            this.tableCell62.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell62.Weight = 0.025568181459199313D;
            // 
            // tableCell63
            // 
            this.tableCell63.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLai")});
            this.tableCell63.Name = "tableCell63";
            this.tableCell63.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:n0}";
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.tableCell63.Summary = summary8;
            this.tableCell63.Text = "tableCell63";
            this.tableCell63.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell63.Weight = 0.028976490863344893D;
            // 
            // tableRow6
            // 
            this.tableRow6.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell40,
                        this.tableCell41,
                        this.tableCell42});
            this.tableRow6.Name = "tableRow6";
            this.tableRow6.Weight = 1D;
            // 
            // tableRow9
            // 
            this.tableRow9.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell49,
                        this.tableCell50,
                        this.tableCell51});
            this.tableRow9.Name = "tableRow9";
            this.tableRow9.Weight = 1D;
            // 
            // tableRow8
            // 
            this.tableRow8.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell46,
                        this.tableCell47,
                        this.tableCell48});
            this.tableRow8.Name = "tableRow8";
            this.tableRow8.Weight = 1D;
            // 
            // tableRow7
            // 
            this.tableRow7.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell43,
                        this.tableCell44,
                        this.tableCell45});
            this.tableRow7.Name = "tableRow7";
            this.tableRow7.Weight = 1D;
            // 
            // tableRow5
            // 
            this.tableRow5.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell55,
                        this.tableCell60,
                        this.tableCell61});
            this.tableRow5.Name = "tableRow5";
            this.tableRow5.Weight = 1D;
            // 
            // tableRow10
            // 
            this.tableRow10.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell52,
                        this.tableCell53,
                        this.tableCell54});
            this.tableRow10.Name = "tableRow10";
            this.tableRow10.Weight = 1D;
            // 
            // tableCell40
            // 
            this.tableCell40.Name = "tableCell40";
            this.tableCell40.Weight = 0.88672357151245529D;
            // 
            // tableCell41
            // 
            this.tableCell41.Name = "tableCell41";
            this.tableCell41.Weight = 1.0992150050211196D;
            // 
            // tableCell42
            // 
            this.tableCell42.Name = "tableCell42";
            this.tableCell42.Text = "Ngày . . . . . tháng . . . . . năm . . . . . ";
            this.tableCell42.Weight = 1.0251816617127776D;
            // 
            // tableCell49
            // 
            this.tableCell49.Name = "tableCell49";
            this.tableCell49.Text = "Kế toán";
            this.tableCell49.Weight = 0.8867233863952978D;
            // 
            // tableCell50
            // 
            this.tableCell50.Name = "tableCell50";
            this.tableCell50.Text = "Trưởng ban tài chính";
            this.tableCell50.Weight = 1.0992151901382774D;
            // 
            // tableCell51
            // 
            this.tableCell51.Name = "tableCell51";
            this.tableCell51.Text = "Thủ trưởng đơn vị";
            this.tableCell51.Weight = 1.0251816617127776D;
            // 
            // tableCell46
            // 
            this.tableCell46.Name = "tableCell46";
            this.tableCell46.Weight = 0.88672357151245529D;
            // 
            // tableCell47
            // 
            this.tableCell47.Name = "tableCell47";
            this.tableCell47.Weight = 1.0992150050211196D;
            // 
            // tableCell48
            // 
            this.tableCell48.Name = "tableCell48";
            this.tableCell48.Weight = 1.0251816617127776D;
            // 
            // tableCell43
            // 
            this.tableCell43.Name = "tableCell43";
            this.tableCell43.Weight = 0.8867233863952978D;
            // 
            // tableCell44
            // 
            this.tableCell44.Name = "tableCell44";
            this.tableCell44.Weight = 1.0992151901382774D;
            // 
            // tableCell45
            // 
            this.tableCell45.Name = "tableCell45";
            this.tableCell45.Weight = 1.0251816617127776D;
            // 
            // tableCell55
            // 
            this.tableCell55.Name = "tableCell55";
            this.tableCell55.Weight = 0.8867233863952978D;
            // 
            // tableCell60
            // 
            this.tableCell60.Name = "tableCell60";
            this.tableCell60.Weight = 1.0992151901382774D;
            // 
            // tableCell61
            // 
            this.tableCell61.Name = "tableCell61";
            this.tableCell61.Weight = 1.0251816617127776D;
            // 
            // tableCell52
            // 
            this.tableCell52.Name = "tableCell52";
            this.tableCell52.Weight = 0.88672357151245529D;
            // 
            // tableCell53
            // 
            this.tableCell53.Name = "tableCell53";
            this.tableCell53.Weight = 1.0992150050211196D;
            // 
            // tableCell54
            // 
            this.tableCell54.Name = "tableCell54";
            this.tableCell54.Weight = 1.0251816617127776D;
            // 
            // table2
            // 
            this.table2.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table2.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.table2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table2.Name = "table2";
            this.table2.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow2});
            this.table2.SizeF = new System.Drawing.SizeF(1100F, 69.79166F);
            this.table2.StylePriority.UseBorders = false;
            this.table2.StylePriority.UseFont = false;
            this.table2.StylePriority.UseTextAlignment = false;
            this.table2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // tableRow2
            // 
            this.tableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell4,
                        this.tableCell5,
                        this.tableCell8,
                        this.tableCell14,
                        this.tableCell9,
                        this.tableCell10,
                        this.tableCell19,
                        this.tableCell22,
                        this.tableCell25,
                        this.tableCell33,
                        this.tableCell6,
                        this.tableCell30});
            this.tableRow2.Name = "tableRow2";
            this.tableRow2.Weight = 1D;
            // 
            // tableCell4
            // 
            this.tableCell4.Name = "tableCell4";
            this.tableCell4.Text = "STT";
            this.tableCell4.Weight = 0.10510504645270269D;
            // 
            // tableCell5
            // 
            this.tableCell5.Name = "tableCell5";
            this.tableCell5.Text = "Số chứng từ";
            this.tableCell5.Weight = 0.19219216286599106D;
            // 
            // tableCell8
            // 
            this.tableCell8.Name = "tableCell8";
            this.tableCell8.Text = "Mã quản lý";
            this.tableCell8.Weight = 0.27927945523648651D;
            // 
            // tableCell14
            // 
            this.tableCell14.Name = "tableCell14";
            this.tableCell14.Text = "Tên công cụ dụng cụ";
            this.tableCell14.Weight = 0.66216230512739316D;
            // 
            // tableCell9
            // 
            this.tableCell9.Name = "tableCell9";
            this.tableCell9.Text = "Serial";
            this.tableCell9.Weight = 0.21096085282059418D;
            // 
            // tableCell10
            // 
            this.tableCell10.Name = "tableCell10";
            this.tableCell10.Text = "SL";
            this.tableCell10.Weight = 0.11448945833040054D;
            // 
            // tableCell19
            // 
            this.tableCell19.Name = "tableCell19";
            this.tableCell19.Text = "Nguyên giá";
            this.tableCell19.Weight = 0.28547298213741107D;
            // 
            // tableCell22
            // 
            this.tableCell22.Name = "tableCell22";
            this.tableCell22.Text = "Lũy kế khấu hao";
            this.tableCell22.Weight = 0.24183558650202958D;
            // 
            // tableCell25
            // 
            this.tableCell25.Name = "tableCell25";
            this.tableCell25.Text = "Lũy kế hao mòn";
            this.tableCell25.Weight = 0.20284681211362737D;
            // 
            // tableCell33
            // 
            this.tableCell33.Name = "tableCell33";
            this.tableCell33.Text = "Chi phí còn lại trước phân bổ";
            this.tableCell33.Weight = 0.27563872294383024D;
            // 
            // tableCell6
            // 
            this.tableCell6.Name = "tableCell6";
            this.tableCell6.Text = "Chi phí phân bổ";
            this.tableCell6.Weight = 0.21621621449788425D;
            // 
            // tableCell30
            // 
            this.tableCell30.Name = "tableCell30";
            this.tableCell30.Text = "Chi phí còn lại sau phân bổ";
            this.tableCell30.Weight = 0.24503843588156041D;
            // 
            // table3
            // 
            this.table3.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table3.Font = new System.Drawing.Font("Times New Roman", 8F, System.Drawing.FontStyle.Bold);
            this.table3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table3.Name = "table3";
            this.table3.Padding = new DevExpress.XtraPrinting.PaddingInfo(3, 3, 3, 3, 100F);
            this.table3.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow3});
            this.table3.SizeF = new System.Drawing.SizeF(1100F, 25F);
            this.table3.StylePriority.UseBorders = false;
            this.table3.StylePriority.UseFont = false;
            this.table3.StylePriority.UsePadding = false;
            // 
            // tableRow3
            // 
            this.tableRow3.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell13,
                        this.tableCell17,
                        this.tableCell20,
                        this.tableCell23,
                        this.tableCell26,
                        this.tableCell34,
                        this.tableCell11,
                        this.tableCell31});
            this.tableRow3.Name = "tableRow3";
            this.tableRow3.Weight = 11.5D;
            // 
            // tableCell13
            // 
            this.tableCell13.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell13.Name = "tableCell13";
            this.tableCell13.StylePriority.UseFont = false;
            this.tableCell13.Text = "Đơn vị: Văn phòng đại diện";
            this.tableCell13.Weight = 0.17143112681128767D;
            // 
            // tableCell17
            // 
            this.tableCell17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.SL")});
            this.tableCell17.Name = "tableCell17";
            this.tableCell17.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:n0}";
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell17.Summary = summary9;
            this.tableCell17.Text = "1";
            this.tableCell17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell17.Weight = 0.0135387041352012D;
            // 
            // tableCell20
            // 
            this.tableCell20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.NguyenGia")});
            this.tableCell20.Name = "tableCell20";
            this.tableCell20.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:n0}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell20.Summary = summary10;
            this.tableCell20.Text = "17534844";
            this.tableCell20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell20.Weight = 0.033757988864725294D;
            // 
            // tableCell23
            // 
            this.tableCell23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeKHTaiSanChuyenSang")});
            this.tableCell23.Name = "tableCell23";
            this.tableCell23.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:n0}";
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell23.Summary = summary11;
            this.tableCell23.Text = "3799211";
            this.tableCell23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell23.Weight = 0.028597743890502229D;
            // 
            // tableCell26
            // 
            this.tableCell26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.LuyKeHMTaiSanChuyenSang")});
            this.tableCell26.Name = "tableCell26";
            this.tableCell26.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:n0}";
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell26.Summary = summary12;
            this.tableCell26.Text = "0";
            this.tableCell26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell26.Weight = 0.023987211287021654D;
            // 
            // tableCell34
            // 
            this.tableCell34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLaiTruocPhanBo")});
            this.tableCell34.Name = "tableCell34";
            this.tableCell34.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:n0}";
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell34.Summary = summary13;
            this.tableCell34.Text = "13735633";
            this.tableCell34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell34.Weight = 0.032595061788504784D;
            // 
            // tableCell11
            // 
            this.tableCell11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiPhanBo")});
            this.tableCell11.Name = "tableCell11";
            this.tableCell11.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:n0}";
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell11.Summary = summary14;
            this.tableCell11.Text = "2289730";
            this.tableCell11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell11.Weight = 0.025568181459199313D;
            // 
            // tableCell31
            // 
            this.tableCell31.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "MainData.ChiPhiConLai")});
            this.tableCell31.Name = "tableCell31";
            this.tableCell31.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:n0}";
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell31.Summary = summary15;
            this.tableCell31.Text = "11445903";
            this.tableCell31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            this.tableCell31.Weight = 0.028976490863344893D;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.pageInfo1.Format = "Trang {0}/{1}";
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(323.9312F, 0F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.SizeF = new System.Drawing.SizeF(401.557F, 23F);
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // Rpt_ReportMau
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.TopMargin,
                        this.BottomMargin,
                        this.ReportHeader,
                        this.ReportFooter,
                        this.PageHeader,
                        this.GroupHeader1,
                        this.PageFooter});
            this.DataMember = "MainData";
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(33, 33, 47, 26);
            this.Name = "Rpt_ReportMau";
            this.PageHeight = 827;
            this.PageWidth = 1169;
            this.PaperKind = System.Drawing.Printing.PaperKind.A4;
            this.Version = "13.1";
            ((System.ComponentModel.ISupportInitialize)(this.table1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table7)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
</Data>
    <TenBaoCao>Chi tiết phân bổ chi phí CCDC chuyển từ tài sản</TenBaoCao>
    <TenPhuongThuc>ChiTietPhanBoChiPhiCCDCChuyenTuTaiSan</TenPhuongThuc>
    <ThuMuc>3</ThuMuc>
    <DenNgay>2014-03-24T00:00:00+07:00</DenNgay>
    <UserID>39</UserID>
    <SoTTSapXep>10</SoTTSapXep>
  </ReportTemplate>
</DocumentElement>